{"version":3,"file":"static/js/729.f0697908.chunk.js","mappings":"gQAcsBA,EAAAA,SAAAA,I,gLACE,gHACfC,KAAKC,UAAY,UAACD,KAAKE,mBAAN,OAACC,EAAkBC,QADrB,sBACoCC,EAAAA,GAAAA,oBADpC,YAGgBL,KAAKE,YAAjCI,EAHY,EAGZA,eAAgBF,EAHJ,EAGIA,QAEpBJ,KAAKO,SAAWC,EAAAA,GAAAA,UALA,sBAKgCH,EAAAA,GAAAA,kBAAmC,yDALnE,uBAMGL,KAAKC,SAASQ,QAAkB,CACrDC,OAAQ,gBAPU,aAMdC,EANc,SASJA,EAASC,OAAS,GATd,sBAUZC,GAAgBC,EAAAA,EAAAA,IAAcH,EAAS,GAAcX,KAAKe,OAV9C,qBAYEC,EAAAA,EAAAA,IAAsBH,GAZxB,0CAcP,CAAEI,QAASJ,IAdJ,eAkBZK,EAAU,CACdC,OAAQC,OAAOC,SAASC,OACxBC,IAAKH,OAAOC,SAASG,KACrBC,QAASd,EAAS,GAClBP,QAASsB,SAAStB,EAAS,IAC3BuB,QAAS,IACTC,MAAOC,KAAKC,SAASC,SAAS,IAAIC,MAAM,GACxCC,UAAU,IAAIC,MAAOC,eAzBL,WA4BMC,EAAAA,EAAAA,IAAclB,EAASZ,GA5B7B,eA4BZ+B,EA5BY,OA6BZC,GAAiB,IAAIC,aAAcC,OAAOH,GA7B9B,UA8BUrC,KAAKC,SAASQ,QAAoB,CAC5DC,OAAQ,cACR+B,OAAQ,CACNC,QAASJ,EACTK,QAAS,UAlCK,eA8BZC,EA9BY,kBAqCIC,EAAAA,EAAAA,IAAsBvC,EAAgBwC,IAAAA,OAAYF,GAA8BP,EAAWrC,KAAKe,KAAMf,KAAK+C,aArC/G,eAqCZ9B,EArCY,QAsClB+B,EAAAA,EAAAA,IAAUrC,EAAS,GAAcX,KAAKe,KAAME,GAtC1B,kBAuCX,CACLA,QAAAA,IAxCgB,cA2CdZ,EAAAA,GAAAA,kBAAmC,yDA3CrB,iD,uHA8CN,4FACVL,KAAKO,SAAWC,EAAAA,GAAAA,UADN,sBACsCH,EAAAA,GAAAA,mBAAoC,6BAD1E,uBAESL,KAAKC,SAASQ,QAAkB,CACrDC,OAAQ,gBAHI,QAERC,EAFQ,SAKEA,EAASC,OAAS,IAChCqC,EAAAA,EAAAA,IAAWtC,EAAS,GAAIX,KAAKe,MANjB,gD,0DA/CIhB,CAA6BmD,EAAAA,G,iCC0GnDC,EAAOC,QAlHP,SAAeC,GACb,GAAIA,EAASzC,QAAU,IAAO,MAAM,IAAI0C,UAAU,qBAElD,IADA,IAAIC,EAAW,IAAIC,WAAW,KACrBC,EAAI,EAAGA,EAAIF,EAAS3C,OAAQ6C,IACnCF,EAASE,GAAK,IAEhB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,EAASzC,OAAQ8C,IAAK,CACxC,IAAIC,EAAIN,EAASO,OAAOF,GACpBG,EAAKF,EAAEG,WAAW,GACtB,GAAqB,MAAjBP,EAASM,GAAe,MAAM,IAAIP,UAAUK,EAAI,iBACpDJ,EAASM,GAAMH,CAChB,CACD,IAAIK,EAAOV,EAASzC,OAChBoD,EAASX,EAASO,OAAO,GACzBK,EAASpC,KAAKqC,IAAIH,GAAQlC,KAAKqC,IAAI,KACnCC,EAAUtC,KAAKqC,IAAI,KAAOrC,KAAKqC,IAAIH,GA8CvC,SAASK,EAAcC,GACrB,GAAsB,kBAAXA,EAAuB,MAAM,IAAIf,UAAU,mBACtD,GAAsB,IAAlBe,EAAOzD,OAAgB,OAAO,IAAI4C,WAKtC,IAJA,IAAIc,EAAM,EAENC,EAAS,EACT3D,EAAS,EACNyD,EAAOC,KAASN,GACrBO,IACAD,IAMF,IAHA,IAAIE,GAAUH,EAAOzD,OAAS0D,GAAOL,EAAU,IAAO,EAClDQ,EAAO,IAAIjB,WAAWgB,GAEnBH,EAAOC,IAAM,CAElB,IAAII,EAAQnB,EAASc,EAAOP,WAAWQ,IAEvC,GAAc,MAAVI,EAAiB,OAErB,IADA,IAAIhB,EAAI,EACCiB,EAAMH,EAAO,GAAc,IAAVE,GAAehB,EAAI9C,KAAqB,IAAT+D,EAAaA,IAAOjB,IAC3EgB,GAAUX,EAAOU,EAAKE,KAAU,EAChCF,EAAKE,GAAQD,EAAQ,MAAS,EAC9BA,EAASA,EAAQ,MAAS,EAE5B,GAAc,IAAVA,EAAe,MAAM,IAAIE,MAAM,kBACnChE,EAAS8C,EACTY,GACD,CAGD,IADA,IAAIO,EAAML,EAAO5D,EACViE,IAAQL,GAAsB,IAAdC,EAAKI,IAC1BA,IAIF,IAFA,IAAIC,EAAM,IAAItB,WAAWe,GAAUC,EAAOK,IACtCpB,EAAIc,EACDM,IAAQL,GACbM,EAAIrB,KAAOgB,EAAKI,KAElB,OAAOC,CACR,CAMD,MAAO,CACLtC,OA7FF,SAAiB6B,GAOf,GANIA,aAAkBb,aACXuB,YAAYC,OAAOX,GAC5BA,EAAS,IAAIb,WAAWa,EAAOY,OAAQZ,EAAOa,WAAYb,EAAOc,YACxDC,MAAMC,QAAQhB,KACvBA,EAASb,WAAW8B,KAAKjB,OAErBA,aAAkBb,YAAe,MAAM,IAAIF,UAAU,uBAC3D,GAAsB,IAAlBe,EAAOzD,OAAgB,MAAO,GAMlC,IAJA,IAAI2D,EAAS,EACT3D,EAAS,EACT2E,EAAS,EACTC,EAAOnB,EAAOzD,OACX2E,IAAWC,GAA2B,IAAnBnB,EAAOkB,IAC/BA,IACAhB,IAMF,IAHA,IAAIC,GAASgB,EAAOD,GAAUpB,EAAU,IAAO,EAC3CsB,EAAM,IAAIjC,WAAWgB,GAElBe,IAAWC,GAAM,CAItB,IAHA,IAAId,EAAQL,EAAOkB,GAEf7B,EAAI,EACCgC,EAAMlB,EAAO,GAAc,IAAVE,GAAehB,EAAI9C,KAAqB,IAAT8E,EAAaA,IAAOhC,IAC3EgB,GAAU,IAAMe,EAAIC,KAAU,EAC9BD,EAAIC,GAAQhB,EAAQX,IAAU,EAC9BW,EAASA,EAAQX,IAAU,EAE7B,GAAc,IAAVW,EAAe,MAAM,IAAIE,MAAM,kBACnChE,EAAS8C,EACT6B,GACD,CAGD,IADA,IAAII,EAAMnB,EAAO5D,EACV+E,IAAQnB,GAAqB,IAAbiB,EAAIE,IACzBA,IAIF,IADA,IAAIC,EAAM5B,EAAO6B,OAAOtB,GACjBoB,EAAMnB,IAAQmB,EAAOC,GAAOvC,EAASO,OAAO6B,EAAIE,IACvD,OAAOC,CACR,EAkDCxB,aAAcA,EACd0B,OARF,SAAiBC,GACf,IAAId,EAASb,EAAa2B,GAC1B,GAAId,EAAU,OAAOA,EACrB,MAAM,IAAIL,MAAM,WAAab,EAAO,aACrC,EAMF,C,uBCvHD,IAAMiC,EAAQC,EAAQ,OAGtB9C,EAAOC,QAAU4C,EAFA,6D,oPCCDE,EAAKC,EAA4CC,EAAkBC,GACjF,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACvBH,EAAQ,EACVI,YAAU,uBAAC,yGACUN,IADV,QACHO,EADG,SAECH,EAAQG,GACbA,GACHR,EAAKC,EAAUC,EAAUC,EAAQ,GAC9BM,MAAMC,SAAAA,GAEL,OADAL,EAAQK,GACDA,CAHX,IAKGC,OAAOC,SAAAA,GAAD,OAASN,EAAOM,EAAhB,IATF,2CAURV,GAEHG,GAAQ,EAdL,GAiBR,CAEM,IAAMQ,EAAc,yCAAG,0GAC5BC,EAA+C,gCAAEZ,SAAU,IAAMC,MAAO,KAE3B,qBAAXjF,UAA6B,QAAF,EAAEA,OAAe6F,cAAfC,IAAAA,IAAAA,EAAuBC,YAH1D,yCAKlB/F,OAAe6F,QALG,uBAOFf,GAAK,kCAAO9E,OAAe6F,cAAtB,aAAOG,EAAuBD,SAA/B,GAA0CH,EAAQZ,SAAUY,EAAQX,OAPtE,2DAQHjF,OAAe6F,QARZ,gCASrB,MATqB,4CAAH,qDCSdI,EAAAA,SAAAA,I,6BAiBXC,SAAAA,IAA+C,0BAAnCN,EAAmC,uDAAF,CAAC,EAAC,OAC7C,gBAD6CO,EAAAA,EAAAA,IAhBvBC,EAAAA,EAAAA,GAAAA,GAAAA,OAAAA,EAAAA,GAAAA,UAgBuBD,EAAAA,EAAAA,IAdGE,EAAAA,EAAAA,GAAAA,GAAAA,mBAAAA,EAAAA,GAAAA,SAcHF,EAAAA,EAAAA,IAZMG,EAAAA,EAAAA,GAAAA,GAAAA,wBAAAA,EAAAA,GAAAA,SAYNH,EAAAA,EAAAA,IAVRI,EAAAA,EAAAA,GAAAA,GAAAA,OAAAA,EAAAA,GAAAA,WAUQJ,EAAAA,EAAAA,IARV/G,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,EAAAA,GAAAA,YAQU+G,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAAA,GAAAA,UANC,OAMDA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAAA,GAAAA,kBAJW,OAIXA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAAA,GAAAA,cAF1B,IAE0BA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAAA,GAAAA,iBA+HvB,WAClB,EAAKK,UACP,EAAKA,QAAQC,IAAI,aAAc,EAAKC,eACpC,EAAKC,YAAa,EAElB,EAAKxH,OAAS,EAAKA,SAAWC,EAAAA,GAAAA,UAA2BA,EAAAA,GAAAA,MAAuBA,EAAAA,GAAAA,UAChF,EAAKwH,KAAKC,EAAAA,GAAAA,cArIiC,IAE7C,EAAK/H,YAAc8G,EAAQ9G,aAAe,KAC1C,EAAK6C,YAAciE,EAAQjE,aAAe,MAHG,CAI9C,C,8CAEoB,iBACnB,QAAwBmF,QAATN,EAAAA,KAAAA,eAASM,IAAAA,IAAAA,EAAAA,aAAelI,KAAKO,SAAWC,EAAAA,GAAAA,UACxD,G,oBAEW,iBACV,OAA6BP,QAAjBkI,EAAAA,KAAAA,uBAAiBlI,IAAAA,OAAAA,EAAAA,EAAAA,WAAY,IAC1C,E,IAEW,SAACmI,GACX,MAAM,IAAIxD,MAAM,kBACjB,G,gCAEDyD,SAAmBrB,GACbhH,KAAKO,SAAWC,EAAAA,GAAAA,OAChBwG,OAAAA,QAAJ,IAAIA,GAAAA,EAASjE,cACX/C,KAAK+C,YAAciE,EAAQjE,YAE9B,G,2DAES,WAACiE,GAAD,6EACR,+EAEKhH,KAAKE,cACRF,KAAKE,aAAcoI,EAAAA,EAAAA,IAAeZ,EAAAA,GAAAA,OAAyB,QAJrD,SAMaX,EAAe,CAAEX,SAAU,IAAKC,MAAO,IANpD,UAMRrG,KAAK4H,QANG,OAOH5H,KAAK4H,QAPF,sBAOiBW,EAAAA,GAAAA,eAPjB,UAQRvI,KAAKmI,gBAAkB,IAAIK,EAAAA,wBAAwB,CAAEC,OAAQ,CAAEvI,YAAaF,KAAKE,eACjFF,KAAKO,OAASC,EAAAA,GAAAA,MACdR,KAAKgI,KAAKC,EAAAA,GAAAA,MAAsBT,EAAAA,GAAAA,SAVxB,UAaNtD,EAAAA,GAAAA,MAAU,iCACN8C,EAAQ0B,YAdN,wBAeJ1I,KAAK+H,YAAa,EAfd,UAgBE/H,KAAK2I,UAhBP,2DAmBNzE,EAAAA,GAAAA,MAAU,iDAAVA,EAAAA,IACAlE,KAAKgI,KAAK,UAAV,MApBM,2D,qHAwBG,qGAAAY,EAAAA,KAAA,UAET,2EACA5I,KAAKO,OAASC,EAAAA,GAAAA,WACdR,KAAKgI,KAAKC,EAAAA,GAAAA,WAA2B,CAAEY,QAASrB,EAAAA,GAAAA,UAE3CxH,KAAK4H,QAND,sBAMgBW,EAAAA,GAAAA,eANhB,UAOJvI,KAAK4H,QAAQM,YAPT,wBAQDY,EAAmB9I,KAAK4H,QAAQmB,kBAR/B,mBAUC,IAAIzC,SAAyC,SAACC,EAASC,GAC3D,IAAMmC,EAAO,yCAAG,mGACR,EAAKK,oBAAoB,EAAKpB,SADtB,OAEdrB,EAAQ,EAAKtG,UAFC,2CAAH,qDAIb,IAAK,EAAK2H,QAAS,OAAOpB,EAAO+B,EAAAA,GAAAA,gBACjC,EAAKX,QAAQqB,KAAK,UAAWN,GAE5B,EAAKf,QAAmCmB,kBAAoB,WAC3DvC,EAAO+B,EAAAA,GAAAA,gBAD2E,2BAAnBW,EAAmB,yBAAnBA,EAAmB,GAAAC,UAAAA,GAElF,OAAOL,EAAiBM,MAAMR,EAAKhB,QAASsB,EAF7C,EAKD,EAAKtB,QAAQe,UAAU9B,OAAOwC,SAAAA,GAC5B7C,EAAO6C,EADT,GAbI,IAVD,+DA4BDC,EAAAA,cAAiBC,EAAAA,IA5BhB,0CA6BClJ,EAAAA,GAAAA,gBAAkCiJ,OAAAA,EAAAA,SAAAA,IAAAA,EAAAA,QAAAA,EAAAA,EAAAA,GAAiB5G,SA7BpD,yBA+BL1C,KAAK4H,QAAQmB,kBAAoBD,EA/B5B,8DAkCD9I,KAAKgJ,oBAAoBhJ,KAAK4H,SAlC7B,WAqCJ5H,KAAK4H,QAAQ4B,UArCT,uBAqC0BnJ,EAAAA,GAAAA,kBArC1B,eAsCTL,KAAK4H,QAAQ6B,GAAG,aAAczJ,KAAK8H,eAtC1B,kBAwCF9H,KAAKC,UAxCH,wCA2CTD,KAAKO,OAASC,EAAAA,GAAAA,MACdR,KAAK+H,YAAa,EAClB/H,KAAKgI,KAAKC,EAAAA,GAAAA,QAAV,MA7CS,4E,uHAkDG,8GAACjB,EAAgC,gCAAE0C,SAAS,GAA5C,kBAAC,kDAAD,gCAGN,QAAN,EAAM1J,KAAK4H,eAAL+B,IAAAA,OAAA,EAAAA,EAAcC,aAHR,OAIR5C,EAAQ0C,UACV1J,KAAKO,OAASC,EAAAA,GAAAA,UACdR,KAAKmI,gBAAkB,KACvBnI,KAAK4H,QAAU,MAEjB5H,KAAKgI,KAAKC,EAAAA,GAAAA,cATE,kDAWZjI,KAAKgI,KAAKC,EAAAA,GAAAA,QAAwB5H,EAAAA,GAAAA,mBAAqCiJ,OAAAA,EAAAA,SAArC,IAAqCA,EAAAA,QAArC,EAAqCA,EAAAA,GAAiB5G,UAX5E,0D,wHAeC,sFACV1C,KAAK6J,kBADK,sBACoBxJ,EAAAA,GAAAA,kBAAmC,yDADvD,gCAER,CAAC,GAFO,gD,gIAKgB,WAACyJ,GAAD,yEAC1B9J,KAAKmI,gBADqB,sBACE9H,EAAAA,GAAAA,gBAAiC,uBADnC,uBAEzBL,KAAKmI,gBAAgB4B,cAAcD,GAFV,cAG/B9J,KAAKO,OAASC,EAAAA,GAAAA,UACdR,KAAKgI,KAAKC,EAAAA,GAAAA,UAA0B,CAAEY,QAASrB,EAAAA,GAAAA,QAAyBwC,YAAahK,KAAK+H,aAJ3D,kBAKxB/H,KAAKC,UALmB,gD,2DAxItBoH,CAAuBtH,EAAAA,E","sources":["../node_modules/@web3auth/base-solana-adapter/src/baseSolanaAdapter.ts","../node_modules/@web3auth/base-solana-adapter/node_modules/base-x/src/index.js","../node_modules/@web3auth/base-solana-adapter/node_modules/bs58/index.js","../node_modules/@web3auth/phantom-adapter/src/utils.ts","../node_modules/@web3auth/phantom-adapter/src/phantomAdapter.ts"],"sourcesContent":["import {\n  ADAPTER_STATUS,\n  BaseAdapter,\n  checkIfTokenIsExpired,\n  clearToken,\n  getSavedToken,\n  saveToken,\n  signChallenge,\n  UserAuthInfo,\n  verifySignedChallenge,\n  WalletLoginError,\n} from \"@web3auth/base\";\nimport bs58 from \"bs58\";\n\nexport abstract class BaseSolanaAdapter<T> extends BaseAdapter<T> {\n  async authenticateUser(): Promise<UserAuthInfo> {\n    if (!this.provider || !this.chainConfig?.chainId) throw WalletLoginError.notConnectedError();\n\n    const { chainNamespace, chainId } = this.chainConfig;\n\n    if (this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.notConnectedError(\"Not connected with wallet, Please login/connect first\");\n    const accounts = await this.provider.request<string[]>({\n      method: \"getAccounts\",\n    });\n    if (accounts && accounts.length > 0) {\n      const existingToken = getSavedToken(accounts[0] as string, this.name);\n      if (existingToken) {\n        const isExpired = checkIfTokenIsExpired(existingToken);\n        if (!isExpired) {\n          return { idToken: existingToken };\n        }\n      }\n\n      const payload = {\n        domain: window.location.origin,\n        uri: window.location.href,\n        address: accounts[0],\n        chainId: parseInt(chainId, 16),\n        version: \"1\",\n        nonce: Math.random().toString(36).slice(2),\n        issuedAt: new Date().toISOString(),\n      };\n\n      const challenge = await signChallenge(payload, chainNamespace);\n      const encodedMessage = new TextEncoder().encode(challenge);\n      const signedMessage = await this.provider.request<Uint8Array>({\n        method: \"signMessage\",\n        params: {\n          message: encodedMessage,\n          display: \"utf8\",\n        },\n      });\n      const idToken = await verifySignedChallenge(chainNamespace, bs58.encode(signedMessage as Uint8Array), challenge, this.name, this.sessionTime);\n      saveToken(accounts[0] as string, this.name, idToken);\n      return {\n        idToken,\n      };\n    }\n    throw WalletLoginError.notConnectedError(\"Not connected with wallet, Please login/connect first\");\n  }\n\n  async disconnect(): Promise<void> {\n    if (this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.disconnectionError(\"Not connected with wallet\");\n    const accounts = await this.provider.request<string[]>({\n      method: \"getAccounts\",\n    });\n    if (accounts && accounts.length > 0) {\n      clearToken(accounts[0], this.name);\n    }\n  }\n}\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (source instanceof Uint8Array) {\n    } else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength)\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source)\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = new Uint8Array(zeroes + (size - it4))\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","const basex = require('base-x')\nconst ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","import type { IPhantomWalletProvider } from \"@web3auth/solana-provider\";\n\nexport function poll(callback: () => boolean | Promise<boolean>, interval: number, count: number): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    if (count > 0) {\n      setTimeout(async () => {\n        const done = await callback();\n        if (done) resolve(done);\n        if (!done)\n          poll(callback, interval, count - 1)\n            .then((res) => {\n              resolve(res);\n              return res;\n            })\n            .catch((err) => reject(err));\n      }, interval);\n    } else {\n      resolve(false);\n    }\n  });\n}\n\nexport const detectProvider = async (\n  options: { interval: number; count: number } = { interval: 1000, count: 3 }\n): Promise<IPhantomWalletProvider | null> => {\n  const isPhantomAvailable = typeof window !== \"undefined\" && !!(window as any).solana?.isPhantom;\n  if (isPhantomAvailable) {\n    return (window as any).solana;\n  }\n  const isAvailable = await poll(() => (window as any).solana?.isPhantom, options.interval, options.count);\n  if (isAvailable) return (window as any).solana;\n  return null;\n};\n","import {\n  ADAPTER_CATEGORY,\n  ADAPTER_CATEGORY_TYPE,\n  ADAPTER_EVENTS,\n  ADAPTER_NAMESPACES,\n  ADAPTER_STATUS,\n  ADAPTER_STATUS_TYPE,\n  AdapterInitOptions,\n  AdapterNamespaceType,\n  CHAIN_NAMESPACES,\n  ChainNamespaceType,\n  CONNECTED_EVENT_DATA,\n  CustomChainConfig,\n  getChainConfig,\n  log,\n  SafeEventEmitterProvider,\n  UserInfo,\n  WALLET_ADAPTERS,\n  WalletInitializationError,\n  WalletLoginError,\n  Web3AuthError,\n} from \"@web3auth/base\";\nimport { BaseSolanaAdapter } from \"@web3auth/base-solana-adapter\";\nimport { IPhantomWalletProvider, PhantomInjectedProvider } from \"@web3auth/solana-provider\";\n\nimport { detectProvider } from \"./utils\";\nexport interface PhantomAdapterOptions {\n  chainConfig?: CustomChainConfig;\n  sessionTime?: number;\n}\n\nexport class PhantomAdapter extends BaseSolanaAdapter<void> {\n  readonly name: string = WALLET_ADAPTERS.PHANTOM;\n\n  readonly adapterNamespace: AdapterNamespaceType = ADAPTER_NAMESPACES.SOLANA;\n\n  readonly currentChainNamespace: ChainNamespaceType = CHAIN_NAMESPACES.SOLANA;\n\n  readonly type: ADAPTER_CATEGORY_TYPE = ADAPTER_CATEGORY.EXTERNAL;\n\n  public status: ADAPTER_STATUS_TYPE = ADAPTER_STATUS.NOT_READY;\n\n  public _wallet: IPhantomWalletProvider | null = null;\n\n  private phantomProvider: PhantomInjectedProvider | null = null;\n\n  private rehydrated = false;\n\n  constructor(options: PhantomAdapterOptions = {}) {\n    super();\n    this.chainConfig = options.chainConfig || null;\n    this.sessionTime = options.sessionTime || 86400;\n  }\n\n  get isWalletConnected(): boolean {\n    return !!(this._wallet?.isConnected && this.status === ADAPTER_STATUS.CONNECTED);\n  }\n\n  get provider(): SafeEventEmitterProvider | null {\n    return this.phantomProvider?.provider || null;\n  }\n\n  set provider(_: SafeEventEmitterProvider | null) {\n    throw new Error(\"Not implemented\");\n  }\n\n  setAdapterSettings(options: { sessionTime?: number }): void {\n    if (this.status === ADAPTER_STATUS.READY) return;\n    if (options?.sessionTime) {\n      this.sessionTime = options.sessionTime;\n    }\n  }\n\n  async init(options: AdapterInitOptions): Promise<void> {\n    super.checkInitializationRequirements();\n    // set chainConfig for mainnet by default if not set\n    if (!this.chainConfig) {\n      this.chainConfig = getChainConfig(CHAIN_NAMESPACES.SOLANA, \"0x1\");\n    }\n    this._wallet = await detectProvider({ interval: 500, count: 3 });\n    if (!this._wallet) throw WalletInitializationError.notInstalled();\n    this.phantomProvider = new PhantomInjectedProvider({ config: { chainConfig: this.chainConfig as CustomChainConfig } });\n    this.status = ADAPTER_STATUS.READY;\n    this.emit(ADAPTER_EVENTS.READY, WALLET_ADAPTERS.PHANTOM);\n\n    try {\n      log.debug(\"initializing phantom adapter\");\n      if (options.autoConnect) {\n        this.rehydrated = true;\n        await this.connect();\n      }\n    } catch (error) {\n      log.error(\"Failed to connect with cached phantom provider\", error);\n      this.emit(\"ERRORED\", error);\n    }\n  }\n\n  async connect(): Promise<SafeEventEmitterProvider | null> {\n    try {\n      super.checkConnectionRequirements();\n      this.status = ADAPTER_STATUS.CONNECTING;\n      this.emit(ADAPTER_EVENTS.CONNECTING, { adapter: WALLET_ADAPTERS.PHANTOM });\n\n      if (!this._wallet) throw WalletInitializationError.notInstalled();\n      if (!this._wallet.isConnected) {\n        const handleDisconnect = this._wallet._handleDisconnect;\n        try {\n          await new Promise<SafeEventEmitterProvider | null>((resolve, reject) => {\n            const connect = async () => {\n              await this.connectWithProvider(this._wallet as IPhantomWalletProvider);\n              resolve(this.provider);\n            };\n            if (!this._wallet) return reject(WalletInitializationError.notInstalled());\n            this._wallet.once(\"connect\", connect);\n            // Raise an issue on phantom that if window is closed, disconnect event is not fired\n            (this._wallet as IPhantomWalletProvider)._handleDisconnect = (...args: unknown[]) => {\n              reject(WalletInitializationError.windowClosed());\n              return handleDisconnect.apply(this._wallet, args);\n            };\n\n            this._wallet.connect().catch((reason: unknown) => {\n              reject(reason);\n            });\n          });\n        } catch (error: unknown) {\n          if (error instanceof Web3AuthError) throw error;\n          throw WalletLoginError.connectionError((error as Error)?.message);\n        } finally {\n          this._wallet._handleDisconnect = handleDisconnect;\n        }\n      } else {\n        await this.connectWithProvider(this._wallet);\n      }\n\n      if (!this._wallet.publicKey) throw WalletLoginError.connectionError();\n      this._wallet.on(\"disconnect\", this._onDisconnect);\n\n      return this.provider;\n    } catch (error: unknown) {\n      // ready again to be connected\n      this.status = ADAPTER_STATUS.READY;\n      this.rehydrated = false;\n      this.emit(ADAPTER_EVENTS.ERRORED, error);\n      throw error;\n    }\n  }\n\n  async disconnect(options: { cleanup: boolean } = { cleanup: false }): Promise<void> {\n    await super.disconnect();\n    try {\n      await this._wallet?.disconnect();\n      if (options.cleanup) {\n        this.status = ADAPTER_STATUS.NOT_READY;\n        this.phantomProvider = null;\n        this._wallet = null;\n      }\n      this.emit(ADAPTER_EVENTS.DISCONNECTED);\n    } catch (error: unknown) {\n      this.emit(ADAPTER_EVENTS.ERRORED, WalletLoginError.disconnectionError((error as Error)?.message));\n    }\n  }\n\n  async getUserInfo(): Promise<Partial<UserInfo>> {\n    if (!this.isWalletConnected) throw WalletLoginError.notConnectedError(\"Not connected with wallet, Please login/connect first\");\n    return {};\n  }\n\n  private async connectWithProvider(injectedProvider: IPhantomWalletProvider): Promise<SafeEventEmitterProvider | null> {\n    if (!this.phantomProvider) throw WalletLoginError.connectionError(\"No phantom provider\");\n    await this.phantomProvider.setupProvider(injectedProvider);\n    this.status = ADAPTER_STATUS.CONNECTED;\n    this.emit(ADAPTER_EVENTS.CONNECTED, { adapter: WALLET_ADAPTERS.PHANTOM, reconnected: this.rehydrated } as CONNECTED_EVENT_DATA);\n    return this.provider;\n  }\n\n  private _onDisconnect = () => {\n    if (this._wallet) {\n      this._wallet.off(\"disconnect\", this._onDisconnect);\n      this.rehydrated = false;\n      // ready to be connected again only if it was previously connected and not cleaned up\n      this.status = this.status === ADAPTER_STATUS.CONNECTED ? ADAPTER_STATUS.READY : ADAPTER_STATUS.NOT_READY;\n      this.emit(ADAPTER_EVENTS.DISCONNECTED);\n    }\n  };\n}\n"],"names":["BaseSolanaAdapter","this","provider","chainConfig","_this$chainConfig","chainId","WalletLoginError","chainNamespace","status","ADAPTER_STATUS","request","method","accounts","length","existingToken","getSavedToken","name","checkIfTokenIsExpired","idToken","payload","domain","window","location","origin","uri","href","address","parseInt","version","nonce","Math","random","toString","slice","issuedAt","Date","toISOString","signChallenge","challenge","encodedMessage","TextEncoder","encode","params","message","display","signedMessage","verifySignedChallenge","bs58","sessionTime","saveToken","clearToken","BaseAdapter","module","exports","ALPHABET","TypeError","BASE_MAP","Uint8Array","j","i","x","charAt","xc","charCodeAt","BASE","LEADER","FACTOR","log","iFACTOR","decodeUnsafe","source","psz","zeroes","size","b256","carry","it3","Error","it4","vch","ArrayBuffer","isView","buffer","byteOffset","byteLength","Array","isArray","from","pbegin","pend","b58","it1","it2","str","repeat","decode","string","basex","require","poll","callback","interval","count","Promise","resolve","reject","setTimeout","done","then","res","catch","err","detectProvider","options","solana","_window$solana","isPhantom","_window$solana2","PhantomAdapter","constructor","_defineProperty","WALLET_ADAPTERS","ADAPTER_NAMESPACES","CHAIN_NAMESPACES","ADAPTER_CATEGORY","_wallet","off","_onDisconnect","rehydrated","emit","ADAPTER_EVENTS","isConnected","phantomProvider","_","setAdapterSettings","getChainConfig","WalletInitializationError","PhantomInjectedProvider","config","autoConnect","connect","_this","adapter","handleDisconnect","_handleDisconnect","connectWithProvider","once","args","arguments","apply","reason","error","Web3AuthError","publicKey","on","cleanup","_this$_wallet2","disconnect","isWalletConnected","injectedProvider","setupProvider","reconnected"],"sourceRoot":""}