{"version":3,"file":"static/js/87.0ffc6249.chunk.js","mappings":"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","sources":["../node_modules/@toruslabs/base-controllers/src/BaseController.ts","../node_modules/@toruslabs/base-controllers/src/createEventEmitterProxy.ts","../node_modules/@toruslabs/base-controllers/src/Network/INetworkController.ts","../node_modules/@toruslabs/base-controllers/src/enums.ts","../node_modules/@toruslabs/base-controllers/src/Embed/CommunicationWindowManager.ts","../node_modules/@toruslabs/base-controllers/src/utils/utils.ts","../node_modules/@toruslabs/base-controllers/src/Network/createFetchMiddleware.ts","../node_modules/@toruslabs/base-controllers/src/Network/createLoggerMiddleware.ts","../node_modules/@toruslabs/base-controllers/src/Preferences/BasePreferencesController.ts","../node_modules/@toruslabs/base-controllers/src/Transaction/ITransactionController.ts","../node_modules/@web3auth/base-provider/src/baseProvider.ts","../node_modules/@web3auth/base-provider/src/commonPrivateKeyProvider.ts","../node_modules/@web3auth/base-provider/src/utils.ts","../node_modules/bignumber.js/bignumber.js","../node_modules/json-rpc-random-id/index.js","../node_modules/lodash/lodash.js"],"sourcesContent":["import { SafeEventEmitter } from \"@toruslabs/openlogin-jrpc\";\n\nimport { BaseConfig, BaseState, IController } from \"./interfaces\";\n\n/**\n * Controller class that provides configuration, state management, and subscriptions\n */\nclass BaseController<C extends BaseConfig, S extends BaseState> extends SafeEventEmitter implements IController<C, S> {\n  /**\n   * Default options used to configure this controller\n   */\n  defaultConfig: C = {} as C;\n\n  /**\n   * Default state set on this controller\n   */\n  defaultState: S = {} as S;\n\n  /**\n   * Determines if listeners are notified of state changes\n   */\n  disabled = false;\n\n  /**\n   * Name of this controller used during composition\n   */\n  name = \"BaseController\";\n\n  private readonly initialConfig: C;\n\n  private readonly initialState: S;\n\n  private internalConfig: C = this.defaultConfig;\n\n  private internalState: S = this.defaultState;\n\n  /**\n   * Creates a BaseController instance. Both initial state and initial\n   * configuration options are merged with defaults upon initialization.\n   *\n   * @param config - Initial options used to configure this controller\n   * @param state - Initial state to set on this controller\n   */\n  constructor({ config = {} as C, state = {} as S }: { config?: Partial<C>; state?: Partial<S> }) {\n    super();\n    // Use assign since generics can't be spread: https://git.io/vpRhY\n    this.initialState = state as S;\n    this.initialConfig = config as C;\n  }\n\n  /**\n   * Retrieves current controller configuration options\n   *\n   * @returns - Current configuration\n   */\n  get config(): C {\n    return this.internalConfig;\n  }\n\n  /**\n   * Retrieves current controller state\n   *\n   * @returns - Current state\n   */\n  get state(): S {\n    return this.internalState;\n  }\n\n  /**\n   * Updates controller configuration\n   *\n   * @param config - New configuration options\n   * @param overwrite - Overwrite config instead of merging\n   * @param fullUpdate - Boolean that defines if the update is partial or not\n   */\n  configure(config: Partial<C>, overwrite = false, fullUpdate = true): void {\n    if (fullUpdate) {\n      this.internalConfig = overwrite ? (config as C) : Object.assign(this.internalConfig, config);\n\n      for (const key in this.internalConfig) {\n        if (typeof this.internalConfig[key] !== \"undefined\") {\n          this[key as string] = this.internalConfig[key];\n        }\n      }\n    } else {\n      for (const key in config) {\n        /* istanbul ignore else */\n        if (typeof this.internalConfig[key] !== \"undefined\") {\n          this.internalConfig[key] = config[key];\n          this[key as string] = config[key];\n        }\n      }\n    }\n  }\n\n  /**\n   * Updates controller state\n   *\n   * @param state - New state\n   * @param overwrite - Overwrite state instead of merging\n   */\n  update(state: Partial<S>, overwrite = false): void {\n    this.internalState = overwrite ? { ...(state as S) } : { ...this.internalState, ...state };\n    this.emit(\"store\", this.internalState);\n  }\n\n  /**\n   * Enables the controller. This sets each config option as a member\n   * variable on this instance and triggers any defined setters. This\n   * also sets initial state and triggers any listeners.\n   *\n   * @returns - This controller instance\n   */\n  protected initialize(): this {\n    this.internalState = this.defaultState;\n    this.internalConfig = this.defaultConfig;\n    this.configure(this.initialConfig);\n    this.update(this.initialState);\n    return this;\n  }\n}\n\nexport default BaseController;\n","import { SafeEventEmitter } from \"@toruslabs/openlogin-jrpc\";\nconst filterNoop = () => true;\nconst internalEvents = [\"newListener\", \"removeListener\"];\nconst externalEventFilter = (name: string) => !internalEvents.includes(name);\n\ninterface EventEmitterProxyOpts {\n  eventFilter?: ((name: string) => boolean) | string;\n}\n\nfunction getRawListeners<T extends SafeEventEmitter>(eventEmitter: T, name: string) {\n  // prefer native\n  return eventEmitter.rawListeners(name);\n}\n\nexport default function createEventEmitterProxy<T extends SafeEventEmitter>(initialTarget: T, opts?: EventEmitterProxyOpts): T {\n  // parse options\n  const finalOpts = opts || {};\n  let eventFilter = finalOpts.eventFilter || filterNoop;\n  if (typeof eventFilter === \"string\" && eventFilter === \"skipInternal\") eventFilter = externalEventFilter;\n  if (typeof eventFilter !== \"function\") throw new Error(\"createEventEmitterProxy - Invalid eventFilter\");\n\n  let target = initialTarget;\n\n  let setTarget = (newTarget: T) => {\n    const oldTarget = target;\n    target = newTarget;\n\n    oldTarget\n      .eventNames()\n      .filter(eventFilter as (name: string) => boolean)\n      .forEach((name: string) => {\n        getRawListeners(oldTarget, name).forEach((handler: (...args: any[]) => void) => newTarget.on(name, handler));\n      });\n\n    // remove old listeners\n    oldTarget.removeAllListeners();\n  };\n\n  const proxy = new Proxy<T>({} as T, {\n    get: (_, name) => {\n      // override `setTarget` access\n      if (name === \"setTarget\") return setTarget;\n      return target[name];\n    },\n    set: (_, name, value) => {\n      // allow `setTarget` overrides\n      if (name === \"setTarget\") {\n        setTarget = value;\n        return true;\n      }\n      target[name] = value;\n      return true;\n    },\n  });\n\n  return proxy;\n}\n","import { JRPCEngine, JRPCMiddleware, JRPCRequest, JRPCResponse, SafeEventEmitter } from \"@toruslabs/openlogin-jrpc\";\nimport { ethErrors, serializeError } from \"eth-rpc-errors\";\nimport getCreateRandomId from \"json-rpc-random-id\";\n\nimport { BaseConfig, BaseState, IController } from \"../interfaces\";\nexport const createRandomId = getCreateRandomId();\n\nexport interface ProviderConfig {\n  /**\n   * Block explorer url for the chain\n   * @example https://ropsten.etherscan.io\n   */\n  blockExplorerUrl: string;\n  /**\n   * Logo url for the base token\n   */\n  logo: string;\n  /**\n   * Name for ticker\n   * @example 'Binance Token', 'Ethereum', 'Matic Network Token'\n   */\n  tickerName: string;\n  /**\n   * Symbol for ticker\n   * @example BNB, ETH\n   */\n  ticker: string;\n  /**\n   * RPC target Url for the chain\n   * @example https://ropsten.infura.io/v3/YOUR_API_KEY\n   */\n  rpcTarget: string;\n  /**\n   * Chain Id parameter(hex with 0x prefix) for the network. Mandatory for all networks. (assign one with a map to network identifier for platforms)\n   * @example 0x1 for mainnet, 'loading' if not connected to anything yet or connection fails\n   * @defaultValue 'loading'\n   */\n  chainId: string;\n  /**\n   * Display name for the network\n   */\n  displayName: string;\n}\n\n/**\n * Custom network properties\n * @example isEIP1559Compatible: true etc.\n */\nexport interface NetworkProperties {\n  [key: string]: number | string | boolean;\n}\n\n/**\n *\n */\nexport interface NetworkState extends BaseState {\n  /**\n   * Chain Id for the current network\n   */\n  chainId: string;\n  providerConfig: ProviderConfig;\n  properties: NetworkProperties;\n}\n\nexport interface NetworkConfig extends BaseConfig {\n  providerConfig: ProviderConfig;\n}\n\nexport interface INetworkController<C, S> extends IController<C, S> {\n  /**\n   * Gets the chainId of the network\n   */\n  getNetworkIdentifier(): string;\n\n  /**\n   * Sets provider for the current network controller\n   * @param providerConfig - Provider config object\n   */\n  setProviderConfig(providerConfig: ProviderConfig): void;\n  /**\n   * Connects to the rpcUrl for the current selected provider\n   */\n  lookupNetwork(): Promise<void>;\n}\n\nexport type BlockData = string | string[];\n\nexport type Block = Record<string, BlockData>;\n\nexport type SendAsyncCallBack = (err: Error, providerRes: JRPCResponse<Block>) => void;\n\nexport type SendCallBack<U> = (err: any, providerRes: U) => void;\n\nexport type Payload = Partial<JRPCRequest<string[]>>;\n\nexport interface RequestArguments<T> {\n  method: string;\n  params?: T;\n}\nexport type Maybe<T> = T | Partial<T> | null | undefined;\n\nexport interface SafeEventEmitterProvider extends SafeEventEmitter {\n  sendAsync: <T, U>(req: JRPCRequest<T>) => Promise<U>;\n  send: <T, U>(req: JRPCRequest<T>, callback: SendCallBack<U>) => void;\n  request: <T, U>(args: RequestArguments<T>) => Promise<Maybe<U>>;\n}\n\nexport interface ExtendedJsonRpcRequest<T> extends JRPCRequest<T> {\n  skipCache?: boolean;\n}\n\nexport function providerFromEngine(engine: JRPCEngine): SafeEventEmitterProvider {\n  const provider: SafeEventEmitterProvider = new SafeEventEmitter() as SafeEventEmitterProvider;\n  // handle both rpc send methods\n  provider.sendAsync = async <T, U>(req: JRPCRequest<T>) => {\n    const res = await engine.handle(req);\n    if (res.error) {\n      const err = serializeError(res.error, {\n        fallbackError: {\n          message: res.error?.message || res.error.toString(),\n          code: res.error?.code || -32603,\n        },\n      });\n\n      throw ethErrors.rpc.internal(err);\n    }\n    return res.result as U;\n  };\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  provider.send = <T, U>(req: JRPCRequest<T>, callback: (error: any, providerRes: U) => void) => {\n    if (typeof callback !== \"function\") {\n      throw new Error('Must provide callback to \"send\" method.');\n    }\n    engine.handle(req, callback);\n  };\n  // forward notifications\n  if (engine.on) {\n    engine.on(\"notification\", (message: string) => {\n      provider.emit(\"data\", null, message);\n    });\n  }\n\n  provider.request = async <T, U>(args: RequestArguments<T>) => {\n    const req: JRPCRequest<T> = {\n      ...args,\n      id: createRandomId(),\n      jsonrpc: \"2.0\",\n    };\n    const res = await provider.sendAsync(req);\n    return res as U;\n  };\n  return provider;\n}\n\nexport function providerFromMiddleware(middleware: JRPCMiddleware<string[], unknown>): SafeEventEmitterProvider {\n  const engine = new JRPCEngine();\n  engine.push(middleware);\n  const provider: SafeEventEmitterProvider = providerFromEngine(engine);\n  return provider;\n}\n\nexport function providerAsMiddleware(provider: SafeEventEmitterProvider): JRPCMiddleware<unknown, unknown> {\n  return async (req, res, _next, end) => {\n    // send request to provider\n    try {\n      const providerRes: unknown = await provider.sendAsync<unknown, unknown>(req);\n      res.result = providerRes;\n      return end();\n    } catch (error) {\n      return end(error.message);\n    }\n  };\n}\n","export const FEATURES_PROVIDER_CHANGE_WINDOW = { height: 660, width: 375 };\nexport const FEATURES_DEFAULT_WALLET_WINDOW = { height: 740, width: 1315 };\nexport const FEATURES_DEFAULT_POPUP_WINDOW = { height: 700, width: 1200 };\nexport const FEATURES_CONFIRM_WINDOW = { height: 700, width: 450 };\n\nexport const POPUP_LOADED = \"popup_loaded\";\nexport const POPUP_RESULT = \"popup_result\";\n\nexport const SETUP_COMPLETE = \"setup_complete\";\n\nexport const ACTIVITY_ACTION_ALL = \"walletActivity.allTransactions\";\nexport const ACTIVITY_ACTION_SEND = \"walletActivity.send\";\nexport const ACTIVITY_ACTION_BURN = \"walletActivity.burn\";\nexport const ACTIVITY_ACTION_RECEIVE = \"walletActivity.receive\";\nexport const ACTIVITY_ACTION_TOPUP = \"walletActivity.topup\";\n\nexport const ACTIVITY_PERIOD_ALL = \"walletActivity.all\";\nexport const ACTIVITY_PERIOD_WEEK_ONE = \"walletActivity.lastOneWeek\";\nexport const ACTIVITY_PERIOD_MONTH_ONE = \"walletActivity.lastOneMonth\";\nexport const ACTIVITY_PERIOD_MONTH_SIX = \"walletActivity.lastSixMonts\";\n\nexport const ACTIVITY_STATUS_SUCCESSFUL = \"walletActivity.successful\";\nexport const ACTIVITY_STATUS_UNSUCCESSFUL = \"walletActivity.unsuccessful\";\nexport const ACTIVITY_STATUS_PENDING = \"walletActivity.pending\";\nexport const ACTIVITY_STATUS_CANCELLED = \"walletActivity.cancelled\";\nexport const ACTIVITY_STATUS_CANCELLING = \"walletActivity.cancelling\";\n\nexport const COMMUNICATION_NOTIFICATIONS = {\n  IFRAME_STATUS: \"iframe_status\",\n\n  // Tell embed to create the window\n  CREATE_WINDOW: \"create_window\",\n  // Tell embed to close the window\n  CLOSE_WINDOW: \"close_window\",\n\n  USER_LOGGED_IN: \"user_logged_in\",\n  USER_LOGGED_OUT: \"user_logged_out\",\n};\n\nexport const COMMUNICATION_JRPC_METHODS = {\n  LOGOUT: \"logout\",\n  WALLET_INSTANCE_ID: \"wallet_instance_id\",\n  USER_INFO: \"user_info\",\n  SET_PROVIDER: \"set_provider\",\n  TOPUP: \"topup\",\n  IFRAME_STATUS: \"iframe_status\",\n  // embed has opened the window as requested\n  OPENED_WINDOW: \"opened_window\",\n  // user has closed the window from embed's side\n  CLOSED_WINDOW: \"closed_window\",\n  GET_PROVIDER_STATE: \"get_provider_state\",\n  LOGIN_WITH_PRIVATE_KEY: \"login_with_private_key\",\n};\n\nexport const PROVIDER_JRPC_METHODS = {\n  GET_PROVIDER_STATE: \"wallet_get_provider_state\",\n};\n\nexport const PROVIDER_NOTIFICATIONS = {\n  ACCOUNTS_CHANGED: \"wallet_accounts_changed\",\n  CHAIN_CHANGED: \"wallet_chain_changed\",\n  UNLOCK_STATE_CHANGED: \"wallet_unlock_state_changed\",\n};\n\nexport const BROADCAST_CHANNELS = {\n  REDIRECT_CHANNEL: \"redirect_channel\",\n  PROVIDER_CHANGE_CHANNEL: \"torus_provider_change_channel\",\n  TRANSACTION_CHANNEL: \"torus_channel\",\n  MESSAGE_CHANNEL: \"torus_message_channel\",\n  WALLET_LOGOUT_CHANNEL: \"wallet_logout_channel\",\n  WALLET_SELECTED_ADDRESS_CHANNEL: \"wallet_selected_address_channel\",\n  WALLET_NETWORK_CHANGE_CHANNEL: \"wallet_network_change_channel\",\n  WALLET_ACCOUNT_IMPORT_CHANNEL: \"wallet_account_import_channel\",\n  THEME_CHANGE: \"theme_change_channel\",\n};\nexport const BROADCAST_CHANNELS_MSGS = {\n  LOGOUT: \"logout\",\n  ACCOUNT_IMPORTED: \"account_imported\",\n  SELECTED_ADDRESS_CHANGE: \"selected_address_change\",\n  NETWORK_CHANGE: \"network_change\",\n  SET_THEME: \"set_theme\",\n};\n\nexport type BROADCAST_CHANNELS_MSGS_TYPE = typeof BROADCAST_CHANNELS_MSGS[keyof typeof BROADCAST_CHANNELS_MSGS];\n","import { JRPCEngineEndCallback, JRPCEngineNextCallback, JRPCRequest, JRPCResponse, SafeEventEmitter } from \"@toruslabs/openlogin-jrpc\";\n\nimport { COMMUNICATION_JRPC_METHODS } from \"../enums\";\n\nclass CommunicationWindowManager extends SafeEventEmitter {\n  handleWindowRpc = (\n    request: JRPCRequest<{ windowId: string }>,\n    response: JRPCResponse<boolean>,\n    next: JRPCEngineNextCallback,\n    end: JRPCEngineEndCallback\n  ): void => {\n    const { method, params } = request;\n    if (method === COMMUNICATION_JRPC_METHODS.OPENED_WINDOW) {\n      const { windowId } = params;\n      // I've been informed that a window has been opened\n      this.emit(`${windowId}:opened`);\n      response.result = true;\n      end();\n    } else if (method === COMMUNICATION_JRPC_METHODS.CLOSED_WINDOW) {\n      const { windowId } = params;\n      // I've been informed that a window has been closed\n      this.emit(`${windowId}:closed`);\n      response.result = true;\n      end();\n    } else {\n      next();\n    }\n  };\n}\n\nexport default CommunicationWindowManager;\n","import { BigNumber } from \"bignumber.js\";\nimport { addHexPrefix, bufferToInt, ecsign, fromSigned, hashPersonalMessage, intToBuffer, stripHexPrefix, toUnsigned } from \"ethereumjs-util\";\n\nimport { TransactionMeta } from \"../Transaction/ITransactionController\";\n\n/**\n * General utility functions\n */\n\nexport function intToHex(i: number): string {\n  const hex = i.toString(16);\n  return `0x${hex}`;\n}\n\n/**\n * Returns a random number. Don't use for cryptographic purposes.\n * @returns a random number\n */\nexport const randomId = (): string => Math.random().toString(36).slice(2);\n\n/**\n * Pads the front of the given hex string with zeroes until it reaches the\n * target length. If the input string is already longer than or equal to the\n * target length, it is returned unmodified.\n *\n * If the input string is \"0x\"-prefixed or not a hex string, an error will be\n * thrown.\n *\n * @param hexString - The hexadecimal string to pad with zeroes.\n * @param targetLength - The target length of the hexadecimal string.\n * @returns The input string front-padded with zeroes, or the original string\n * if it was already greater than or equal to to the target length.\n */\nexport function padWithZeroes(hexString: string, targetLength: number): string {\n  if (hexString !== \"\" && !/^[a-f0-9]+$/iu.test(hexString)) {\n    throw new Error(`Expected an unprefixed hex string. Received: ${hexString}`);\n  }\n\n  if (targetLength < 0) {\n    throw new Error(`Expected a non-negative integer target length. Received: ${targetLength}`);\n  }\n\n  return String.prototype.padStart.call(hexString, targetLength, \"0\");\n}\n/**\n * Concatenate an extended ECDSA signature into a hex string.\n *\n * @param v - The 'v' portion of the signature.\n * @param r - The 'r' portion of the signature.\n * @param s - The 's' portion of the signature.\n * @returns The concatenated ECDSA signature.\n */\nexport function concatSig(v: Buffer, r: Buffer, s: Buffer): string {\n  const rSig = fromSigned(r);\n  const sSig = fromSigned(s);\n  const vSig = bufferToInt(v);\n  const rStr = padWithZeroes(toUnsigned(rSig).toString(\"hex\"), 64);\n  const sStr = padWithZeroes(toUnsigned(sSig).toString(\"hex\"), 64);\n  const vStr = stripHexPrefix(intToHex(vSig));\n  return addHexPrefix(rStr.concat(sStr, vStr));\n}\n\nexport function timeout(duration: number): Promise<void> {\n  return new Promise((resolve) => {\n    const timeoutRef = window.setTimeout(() => {\n      resolve();\n      window.clearTimeout(timeoutRef);\n    }, duration);\n  });\n}\n\nexport const getHeaders = (jwt: string) => {\n  return {\n    headers: {\n      Authorization: `Bearer ${jwt}`,\n      \"Content-Type\": \"application/json; charset=utf-8\",\n    },\n  };\n};\n\n/**\n * Text/number formatting utilities\n */\nexport const formatSmallNumbers = (number: number, currency = \"usd\", noTilde = false): string => {\n  const finalNumber = BigNumber.isBigNumber(number) ? number.toNumber() : number;\n  if (!Number.isFinite(finalNumber)) return \"\";\n  const value = currency.toLowerCase() === \"usd\" ? parseFloat(Number(finalNumber).toFixed(2)) : parseFloat(Number(finalNumber).toFixed(5));\n  const tilde = value > 0 ? \"~ \" : \"\";\n  return `${currency.toLowerCase() === \"usd\" || noTilde ? \"\" : tilde}${Number(value)} ${currency.toUpperCase()}`;\n};\n\nexport const addressSlicer = (address: string, sliceLength = 5): string => {\n  if (address.length < 11) {\n    return address;\n  }\n  if (typeof address !== \"string\") return \"\";\n  return `${address.slice(0, sliceLength)}...${address.slice(-sliceLength)}`;\n};\n\nexport const significantDigits = (number: number | BigNumber, perc = false, length_ = 2): number | BigNumber => {\n  let input = !BigNumber.isBigNumber(number) ? new BigNumber(number) : number;\n  if (input.isZero()) return input;\n  if (perc) {\n    input = input.times(new BigNumber(100));\n  }\n  let depth;\n  if (input.gte(new BigNumber(1))) {\n    depth = length_;\n  } else {\n    depth = length_ - 1 + Math.ceil(Math.log10(new BigNumber(\"1\").div(input).toNumber()));\n  }\n  const shift = new BigNumber(10).pow(new BigNumber(depth));\n  const roundedNumber = Math.round(shift.times(input).toNumber()) / shift.toNumber();\n  return roundedNumber;\n};\nexport const formatDate = (inputDate: string): string => {\n  const monthList = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n  const date = new Date(inputDate);\n  const day = date.getDate();\n  const month = monthList[date.getMonth()];\n  const year = date.getFullYear();\n  return `${day} ${month} ${year}`;\n};\n\nexport const formatTime = (time: string): string => {\n  return new Date(time).toTimeString().slice(0, 8);\n};\n\n/**\n * Network utilities\n */\nexport const transactionMatchesNetwork = <T>(transaction: TransactionMeta<T>, chainId: string): boolean => {\n  if (typeof transaction.chainId !== \"undefined\") {\n    return transaction.chainId === chainId;\n  }\n  return false;\n};\n\n/**\n * Signing utils\n */\nexport const hashMessage = (message: string): Buffer => {\n  const bufferedMessage = Buffer.from(message, \"utf8\");\n  const el = hashPersonalMessage(bufferedMessage);\n  return el;\n};\n\nexport const signMessage = (privateKey: string, data: string): string => {\n  const privKey = Buffer.from(privateKey, \"hex\");\n  const message = stripHexPrefix(data);\n  const msgSig = ecsign(Buffer.from(message, \"hex\"), privKey);\n  const rawMsgSig = concatSig(intToBuffer(msgSig.v), msgSig.r, msgSig.s);\n  return rawMsgSig;\n};\n\n/**\n * popup handler utils\n */\nexport function getPopupFeatures({ width: w, height: h }: { width: number; height: number }): string {\n  // Fixes dual-screen position                             Most browsers      Firefox\n  const dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n  const dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n\n  const width = window.innerWidth\n    ? window.innerWidth\n    : document.documentElement.clientWidth\n    ? document.documentElement.clientWidth\n    : window.screen.width;\n\n  const height = window.innerHeight\n    ? window.innerHeight\n    : document.documentElement.clientHeight\n    ? document.documentElement.clientHeight\n    : window.screen.height;\n\n  const systemZoom = 1; // No reliable estimate\n\n  const left = Math.abs((width - w) / 2 / systemZoom + dualScreenLeft);\n  const top = Math.abs((height - h) / 2 / systemZoom + dualScreenTop);\n  const features = `titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=${h / systemZoom},width=${w / systemZoom},top=${top},left=${left}`;\n  return features;\n}\n\nexport const broadcastChannelOptions = {\n  // type: 'localstorage', // (optional) enforce a type, oneOf['native', 'idb', 'localstorage', 'node']\n  webWorkerSupport: false, // (optional) set this to false if you know that your channel will never be used in a WebWorker (increases performance)\n};\n\nexport function getCustomDeviceInfo(): Record<string, string> | undefined {\n  if ((navigator as any)?.brave) {\n    return {\n      browser: \"Brave\",\n    };\n  }\n}\nexport class UserError extends Error {}\n\nexport const handleRedirectParameters = (\n  hash: string,\n  queryParameters: Record<string, string>\n): { error: string; instanceParameters: Record<string, string>; hashParameters: Record<string, string> } => {\n  const hashParameters: Record<string, string> = {};\n  const hashUrl = new URL(`${window.location.origin}/?${hash.slice(1)}`);\n  hashUrl.searchParams.forEach((value, key) => {\n    hashParameters[key] = value;\n  });\n  let instanceParameters = {};\n  let error = \"\";\n  if (!queryParameters.windowId) {\n    if (Object.keys(hashParameters).length > 0 && hashParameters.state) {\n      instanceParameters = JSON.parse(window.atob(decodeURIComponent(decodeURIComponent(hashParameters.state)))) || {};\n      error = hashParameters.error_description || hashParameters.error || error;\n    } else if (Object.keys(queryParameters).length > 0 && queryParameters.state) {\n      instanceParameters = JSON.parse(window.atob(decodeURIComponent(decodeURIComponent(queryParameters.state)))) || {};\n      if (queryParameters.error) error = queryParameters.error;\n    }\n  }\n  return { error, instanceParameters, hashParameters };\n};\n\nexport function sleep<T>(ms: number): Promise<T> {\n  return new Promise<T>((resolve) => setTimeout(resolve, ms));\n}\n","import { createAsyncMiddleware, JRPCEngineNextCallback, JRPCMiddleware, JRPCRequest, JRPCResponse } from \"@toruslabs/openlogin-jrpc\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { Block, Payload } from \"./INetworkController\";\n\nexport interface FetchMiddlewareOptions {\n  rpcTarget: string;\n  originHttpHeaderKey?: string;\n}\n\nexport interface PayloadwithOrgin extends Payload {\n  origin?: string;\n}\nexport interface FetchMiddlewareFromReqOptions extends FetchMiddlewareOptions {\n  req: PayloadwithOrgin;\n}\n\nexport interface FetchConfig {\n  fetchUrl: string;\n  fetchParams: Record<string, unknown>;\n}\n\nconst RETRIABLE_ERRORS: string[] = [\n  // ignore server overload errors\n  \"Gateway timeout\",\n  \"ETIMEDOUT\",\n  // ignore server sent html error pages\n  // or truncated json responses\n  \"failed to parse response body\",\n  // ignore errors where http req failed to establish\n  \"Failed to fetch\",\n];\n\nfunction checkForHttpErrors(fetchRes: Response): void {\n  // check for errors\n  switch (fetchRes.status) {\n    case 405:\n      throw ethErrors.rpc.methodNotFound();\n\n    case 418:\n      throw ethErrors.rpc.internal({ message: `Request is being rate limited.` });\n\n    case 503:\n    case 504:\n      throw ethErrors.rpc.internal({\n        message: `Gateway timeout. The request took too long to process.` + `This can happen when querying over too wide a block range.`,\n      });\n\n    default:\n      break;\n  }\n}\n\nfunction timeout(duration: number): Promise<number> {\n  return new Promise((resolve) => setTimeout(resolve, duration));\n}\n\nfunction parseResponse(fetchRes: Response, body: Record<string, Block>): Block {\n  // check for error code\n  if (fetchRes.status !== 200) {\n    throw ethErrors.rpc.internal({\n      message: `Non-200 status code: '${fetchRes.status}'`,\n      data: body,\n    });\n  }\n  // check for rpc error\n  if (body.error) {\n    throw ethErrors.rpc.internal({\n      data: body.error,\n    });\n  }\n  // return successful result\n  return body.result;\n}\n\nexport function createFetchConfigFromReq({ req, rpcTarget, originHttpHeaderKey }: FetchMiddlewareFromReqOptions): FetchConfig {\n  const parsedUrl: URL = new URL(rpcTarget);\n\n  // prepare payload\n  // copy only canonical json rpc properties\n  const payload: Payload = {\n    id: req.id,\n    jsonrpc: req.jsonrpc,\n    method: req.method,\n    params: req.params,\n  };\n\n  // extract 'origin' parameter from request\n  const originDomain: string | undefined = req.origin;\n\n  // serialize request body\n  const serializedPayload: string = JSON.stringify(payload);\n\n  // configure fetch params\n  const fetchParams = {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: serializedPayload,\n  };\n\n  // optional: add request origin as header\n  if (originHttpHeaderKey && originDomain) {\n    fetchParams.headers[originHttpHeaderKey] = originDomain;\n  }\n\n  return { fetchUrl: parsedUrl.href, fetchParams };\n}\n\nexport function createFetchMiddleware({ rpcTarget, originHttpHeaderKey }: FetchMiddlewareOptions): JRPCMiddleware<string[], Block> {\n  return createAsyncMiddleware(async (req: JRPCRequest<string[]>, res: JRPCResponse<unknown>, _next: JRPCEngineNextCallback) => {\n    const { fetchUrl, fetchParams } = createFetchConfigFromReq({\n      req,\n      rpcTarget,\n      originHttpHeaderKey,\n    });\n\n    // attempt request multiple times\n    const maxAttempts = 5;\n    const retryInterval = 1000;\n    for (let attempt = 0; attempt < maxAttempts; attempt++) {\n      try {\n        const fetchRes: Response = await fetch(fetchUrl, fetchParams);\n        // check for http errrors\n        checkForHttpErrors(fetchRes);\n        // parse response body\n        const fetchBody: Record<string, Block> = await fetchRes.json();\n        const result: Block = parseResponse(fetchRes, fetchBody);\n        // set result and exit retry loop\n        res.result = result;\n        return;\n      } catch (err) {\n        const errMsg: string = err.toString();\n        const isRetriable: boolean = RETRIABLE_ERRORS.some((phrase) => errMsg.includes(phrase));\n        // re-throw error if not retriable\n        if (!isRetriable) {\n          throw err;\n        }\n      }\n      // delay before retrying\n      await timeout(retryInterval);\n    }\n  });\n}\n","import { JRPCEngineNextCallback, JRPCRequest, JRPCResponse } from \"@toruslabs/openlogin-jrpc\";\nimport log from \"loglevel\";\n\nexport interface LoggerMiddlewareOptions {\n  origin: string;\n}\n\nexport function createLoggerMiddleware(options: LoggerMiddlewareOptions) {\n  return function loggerMiddleware(request: JRPCRequest<unknown>, response: JRPCResponse<unknown>, next: JRPCEngineNextCallback): void {\n    next((callback) => {\n      if (response.error) {\n        log.warn(\"Error in RPC response:\\n\", response);\n      }\n      if ((request as unknown as { isTorusInternal: boolean }).isTorusInternal) return;\n      log.info(`RPC (${options.origin}):`, request, \"->\", response);\n      callback();\n    });\n  };\n}\n","import { get, patch, post, remove } from \"@toruslabs/http-helpers\";\nimport bowser from \"bowser\";\nimport { cloneDeep } from \"lodash\";\nimport log from \"loglevel\";\n\nimport BaseController from \"../BaseController\";\nimport { BaseConfig, EmailObject, LOGIN_PROVIDER, UserInfo } from \"../interfaces\";\nimport { BaseKeyringController } from \"../Keyring/BaseKeyringController\";\nimport { KeyringControllerState } from \"../Keyring/IKeyringController\";\nimport { TransactionStatus } from \"../Transaction/ITransactionController\";\nimport { getCustomDeviceInfo, getHeaders } from \"../utils\";\nimport {\n  ACCOUNT_CATEGORY,\n  AddressPreferences,\n  BillboardEvent,\n  Contact,\n  ContactPayload,\n  DiscoverDapp,\n  PreferencesConfig,\n  PreferencesState,\n  RecordLoginPayload,\n  THEME,\n  UserPayload,\n} from \"./IPreferencesController\";\n\n// By default, poll every 3 minutes\nconst DEFAULT_INTERVAL = 180 * 1000;\n\nexport const DEFAULT_PREFERENCES = {\n  selectedCurrency: \"USD\",\n  theme: \"dark\",\n  locale: \"en-US\",\n  accountType: ACCOUNT_CATEGORY.NORMAL,\n  contacts: [],\n  jwtToken: \"\",\n  fetchedPastTx: [],\n  pastTransactions: [],\n  paymentTx: [],\n  defaultPublicAddress: \"\",\n  customTokens: [],\n  customNfts: [],\n  crashReport: true,\n  userInfo: {\n    aggregateVerifier: \"\",\n    email: \"\",\n    name: \"\",\n    profileImage: \"\",\n    typeOfLogin: LOGIN_PROVIDER.GOOGLE,\n    verifier: \"\",\n    verifierId: \"\",\n  },\n} as AddressPreferences;\n\n/**\n * Controller that stores shared settings and exposes convenience methods\n */\nexport abstract class BasePreferencesController<\n  P extends AddressPreferences,\n  C extends PreferencesConfig,\n  S extends PreferencesState<P>\n> extends BaseController<C, S> {\n  /**\n   * Name of this controller used during composition\n   */\n  name = \"PreferencesController\";\n\n  public iframeOrigin: string;\n\n  private signAuthMessage: BaseKeyringController<BaseConfig, KeyringControllerState>[\"signAuthMessage\"];\n\n  private defaultPreferences: Partial<P>;\n\n  /**\n   * Creates a PreferencesController instance\n   *\n   * @param config - Initial options used to configure this controller\n   * @param state - Initial state to set on this controller\n   */\n  constructor({\n    config,\n    state,\n    defaultPreferences,\n    signAuthMessage,\n  }: {\n    config?: Partial<C> & Pick<C, \"api\" | \"commonApiHost\" | \"signInPrefix\">;\n    state?: Partial<S>;\n    defaultPreferences?: Partial<P>;\n    signAuthMessage: BaseKeyringController<BaseConfig, KeyringControllerState>[\"signAuthMessage\"];\n  }) {\n    super({ config, state });\n    if (!config.api) {\n      throw new Error(\"PreferencesController - no api specified in config.\");\n    }\n    this.defaultState = {\n      identities: {},\n      selectedAddress: \"\",\n      lastErrorMessage: \"\",\n      lastSuccessMessage: \"\",\n    } as S;\n    this.defaultConfig = {\n      api: config.api,\n      pollInterval: DEFAULT_INTERVAL,\n    } as C;\n    this.initialize();\n    this.defaultPreferences = {\n      ...DEFAULT_PREFERENCES,\n      ...defaultPreferences,\n    };\n    this.signAuthMessage = signAuthMessage;\n  }\n\n  public setIframeOrigin(origin: string): void {\n    this.iframeOrigin = origin;\n  }\n\n  getAddressState(address?: string): P | undefined {\n    const selectedAddress = address || this.state.selectedAddress;\n    return this.state.identities[selectedAddress];\n  }\n\n  /**\n   * Sets selected address\n   *\n   * @param selectedAddress - casper account hash\n   */\n  setSelectedAddress(selectedAddress: string): void {\n    this.update({ selectedAddress } as Partial<S>);\n  }\n\n  async getUser<U>(address: string): Promise<U> {\n    const user = await get<{ success: boolean; error?: string; data?: U }>(`${this.config.api}/user?fetchTx=false`, this.headers(address), {\n      useAPIKey: true,\n    });\n    return user.data;\n  }\n\n  async createUser(params: {\n    selectedCurrency: string;\n    theme: THEME;\n    verifier: string;\n    verifierId: string;\n    locale: string;\n    address: string;\n  }): Promise<void> {\n    const { selectedCurrency, theme, verifier, verifierId, locale, address } = params;\n    const userPayload: UserPayload = {\n      default_currency: selectedCurrency,\n      theme,\n      verifier,\n      verifier_id: verifierId,\n      locale,\n    };\n    await post(`${this.config.api}/user`, userPayload, this.headers(address), { useAPIKey: true });\n    this.updateState(\n      {\n        theme,\n        defaultPublicAddress: address,\n        selectedCurrency,\n        locale,\n      } as Partial<P>,\n      address\n    );\n  }\n\n  public async storeUserLogin(params: {\n    verifier: string;\n    verifierId: string;\n    address: string;\n    options: { calledFromEmbed: boolean; rehydrate: boolean };\n  }): Promise<void> {\n    const { verifierId, verifier, options, address } = params;\n    if (!options.rehydrate) {\n      const browser = bowser.getParser(window.navigator.userAgent);\n      const specialBrowser = getCustomDeviceInfo();\n      const recordLoginPayload: RecordLoginPayload = {\n        os: browser.getOSName(),\n        os_version: browser.getOSVersion() || \"unidentified\",\n        browser: specialBrowser?.browser || browser.getBrowserName() || \"unidentified\",\n        browser_version: browser.getBrowserVersion() || \"unidentified\",\n        platform: browser.getPlatform().type || \"desktop\",\n        hostname: this.iframeOrigin,\n        verifier,\n        verifier_id: verifierId,\n      };\n      await post<{ success: boolean }>(`${this.config.api}/user/recordLogin`, recordLoginPayload, this.headers(address), { useAPIKey: true });\n    }\n  }\n\n  async setCrashReport(isEnabled: boolean): Promise<boolean> {\n    if (isEnabled === this.getAddressState()?.crashReport) return true;\n    try {\n      await patch(`${this.config.api}/user`, { enable_crash_reporter: isEnabled }, this.headers(), { useAPIKey: true });\n      this.updateState({ crashReport: isEnabled } as Partial<P>);\n      return true;\n    } catch (error) {\n      log.error(error);\n      return false;\n    }\n  }\n\n  async setUserTheme(theme: THEME): Promise<boolean> {\n    if (theme === this.getAddressState()?.theme) return true;\n    try {\n      await patch(`${this.config.api}/user`, { theme }, this.headers(), { useAPIKey: true });\n      this.updateState({ theme } as Partial<P>);\n      return true;\n    } catch (error) {\n      log.error(error);\n      return false;\n    }\n  }\n\n  async setUserLocale(locale: string): Promise<boolean> {\n    if (locale === this.getAddressState()?.locale) return;\n    try {\n      await patch(`${this.config.api}/user`, { locale }, this.headers(), { useAPIKey: true });\n      this.updateState({ locale } as Partial<P>);\n      return true;\n    } catch (error) {\n      log.error(\"unable to set locale\", error);\n      return false;\n    }\n  }\n\n  async setSelectedCurrency(payload: { selectedCurrency: string }): Promise<boolean> {\n    if (payload.selectedCurrency === this.getAddressState()?.selectedCurrency) return true;\n    try {\n      await patch(`${this.config.api}/user`, { default_currency: payload.selectedCurrency }, this.headers(), { useAPIKey: true });\n      this.updateState({ selectedCurrency: payload.selectedCurrency } as Partial<P>);\n      return true;\n    } catch (error) {\n      log.error(error);\n      return false;\n    }\n  }\n\n  async addContact(contact: ContactPayload): Promise<boolean> {\n    try {\n      const response = await post<{ success: boolean; data: Contact }>(`${this.config.api}/contact`, contact, this.headers(), { useAPIKey: true });\n      this.updateState({ contacts: [...(this.getAddressState()?.contacts || []), response.data] } as Partial<P>);\n      return true;\n    } catch (error) {\n      log.error(\"unable to add contact\", error);\n      return false;\n    }\n  }\n\n  async deleteContact(contactId: number): Promise<boolean> {\n    try {\n      const response = await remove<{ success: boolean; data: { id: number } }>(`${this.config.api}/contact/${contactId}`, {}, this.headers(), {\n        useAPIKey: true,\n      });\n      const finalContacts = this.getAddressState()?.contacts.filter((contact) => contact.id !== response.data.id);\n      if (finalContacts) this.updateState({ contacts: [...finalContacts] } as Partial<P>);\n      return true;\n    } catch (error) {\n      log.error(\"unable to delete contact\", error);\n      return false;\n    }\n  }\n\n  async revokeDiscord(idToken: string): Promise<void> {\n    try {\n      const resp = await post(`${this.config.api}/revoke/discord`, { token: idToken }, this.headers(), { useAPIKey: true });\n      log.info(resp);\n    } catch (error) {\n      log.error(error);\n    }\n  }\n\n  async patchPastTx(body: { id: string; status: TransactionStatus; updated_at: string }, address: string): Promise<void> {\n    try {\n      const response = await patch(`${this.config.api}/transaction`, body, this.headers(address), { useAPIKey: true });\n      log.info(\"successfully patched\", response);\n    } catch (error) {\n      log.error(\"unable to patch tx\", error);\n    }\n  }\n\n  async postPastTx<T>(tx: T, address: string): Promise<{ success: boolean; response: number[] }> {\n    try {\n      const response = await post(`${this.config.api}/transaction`, tx, this.headers(address), {\n        useAPIKey: true,\n      });\n      log.info(\"successfully posted tx\", response);\n      return response as { success: boolean; response: number[] };\n    } catch (error) {\n      log.error(error, \"unable to insert transaction\");\n    }\n  }\n\n  async getWalletOrders<T>(address: string): Promise<T[]> {\n    try {\n      const response = await get<{ success: boolean; data: T[] | null }>(`${this.config.api}/transaction`, this.headers(address), {\n        useAPIKey: true,\n      });\n      return response.success ? (response.data ? response.data : []) : [];\n    } catch (error) {\n      log.error(\"unable to get wallet orders tx\", error);\n      return [];\n    }\n  }\n\n  async getTopUpOrders<T>(address: string): Promise<T[]> {\n    try {\n      const response = await get<{ success: boolean; data: T[] }>(`${this.config.commonApiHost}/transaction`, this.headers(address), {\n        useAPIKey: true,\n      });\n      return response.data || [];\n    } catch (error) {\n      log.error(\"unable to fetch past Top up orders\", error);\n    }\n  }\n\n  async getBillBoardData(): Promise<BillboardEvent[]> {\n    try {\n      const response = await get<{ success: boolean; data: BillboardEvent[] | null }>(`${this.config.api}/billboard`, this.headers(), {\n        useAPIKey: true,\n      });\n      return response.success ? response.data : [];\n    } catch (error) {\n      log.error(\"unable to get billboard data\", error);\n      return [];\n    }\n  }\n\n  async getMessageForSigning(publicAddress: string): Promise<string> {\n    const response = await post<{ success: boolean; message: string }>(\n      `${this.config.api}/auth/message`,\n      {\n        public_address: publicAddress,\n      },\n      {},\n      { useAPIKey: true }\n    );\n    return response.message;\n  }\n\n  async getTwitterId(payload: { nick: string; typeOfLogin: string }): Promise<string> {\n    const res = await get<{ success: boolean; data: string }>(`${this.config.api}/twitter?screen_name=${payload.nick}`, this.headers(), {\n      useAPIKey: true,\n    });\n    return `${payload.typeOfLogin.toLowerCase()}|${res.data.toString()}`;\n  }\n\n  async sendEmail(payload: { emailObject: EmailObject }): Promise<void> {\n    return post(`${this.config.api}/transaction/sendemail`, payload.emailObject, this.headers(), { useAPIKey: true });\n  }\n\n  async refreshJwt(): Promise<void> {\n    const address = this.state.selectedAddress;\n    const messageToSign = await this.getMessageForSigning(address);\n    if (!messageToSign.startsWith(this.config.signInPrefix)) throw new Error(\"Cannot sign on invalid message\");\n    const signedMessage = this.signAuthMessage(address, messageToSign);\n    const response: { token: string } = await post(\n      `${this.config.api}/auth/verify`,\n      {\n        public_address: address,\n        signed_message: signedMessage,\n      },\n      {},\n      { useAPIKey: true }\n    );\n    this.updateState({ jwtToken: response.token } as Partial<P>, address);\n  }\n\n  async getDappList(): Promise<DiscoverDapp[]> {\n    try {\n      const response = await get<{ success: boolean; error?: string; data?: DiscoverDapp[] }>(`${this.config.api}/dapps`, this.headers(), {\n        useAPIKey: true,\n      });\n      return response.success ? response.data : [];\n    } catch (error) {\n      log.error(\"unable to get billboard data\", error);\n      return [];\n    }\n  }\n\n  protected async init(address: string, userInfo: UserInfo, jwtToken?: string): Promise<void> {\n    let response = { token: jwtToken };\n    if (this.getAddressState(address)) return;\n    if (!jwtToken) {\n      const messageToSign = await this.getMessageForSigning(address);\n      if (!messageToSign.startsWith(this.config.signInPrefix)) throw new Error(\"Cannot sign on invalid message\");\n      const signedMessage = this.signAuthMessage(address, messageToSign);\n      response = await post(\n        `${this.config.api}/auth/verify`,\n        {\n          public_address: address,\n          signed_message: signedMessage,\n        },\n        {},\n        { useAPIKey: true }\n      );\n    }\n    this.updateState({ jwtToken: response.token, userInfo } as Partial<P>, address);\n  }\n\n  protected updateState(preferences?: Partial<P>, address?: string): P {\n    const selectedAddress = address || this.state.selectedAddress;\n    const currentState = this.getAddressState(selectedAddress) || cloneDeep(this.defaultPreferences);\n    const mergedState = { ...currentState, ...preferences } as P;\n    this.update({\n      identities: {\n        ...this.state.identities,\n        [selectedAddress]: mergedState,\n      },\n    } as S);\n    return mergedState;\n  }\n\n  private headers(address?: string): { headers: { Authorization: string; \"Content-Type\": string } } {\n    const selectedAddress = address || this.state.selectedAddress;\n    return getHeaders(this.getAddressState(selectedAddress)?.jwtToken || \"\");\n  }\n\n  abstract sync(address: string): Promise<boolean>;\n}\n","import { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\n\nimport { BaseConfig, BaseState } from \"../interfaces\";\n\n/**\n * The status of the transaction. Each status represents the state of the transaction internally\n * in the wallet. Some of these correspond with the state of the transaction on the network, but\n * some are wallet-specific.\n */\n\nexport enum TransactionStatus {\n  approved = \"approved\",\n  cancelled = \"cancelled\",\n  confirmed = \"confirmed\",\n  failed = \"failed\",\n  finalized = \"finalized\",\n  processed = \"processed\",\n  rejected = \"rejected\",\n  signed = \"signed\",\n  submitted = \"submitted\",\n  unapproved = \"unapproved\",\n  dropped = \"dropped\",\n  expired = \"expired\",\n}\n\nexport const TRANSACTION_TYPES = {\n  CONTRACT_INTERACTION: \"contractInteraction\",\n  DEPLOY_CONTRACT: \"contractDeployment\",\n  WASM_BASED_DEPLOY: \"wasmBasedDeploy\",\n  STANDARD_TRANSACTION: \"transaction\",\n  STANDARD_PAYMENT_TRANSACTION: \"payment_transaction\", // specific to chains like solana and casper\n};\n\nexport type TRANSACTION_TYPE = typeof TRANSACTION_TYPES[keyof typeof TRANSACTION_TYPES];\n\nexport const TX_EVENTS = {\n  TX_WARNING: \"tx:warning\",\n  TX_ERROR: \"tx:error\",\n  TX_FAILED: \"tx:failed\",\n  TX_CONFIRMED: \"tx:confirmed\",\n  TX_DROPPED: \"tx:dropped\",\n  TX_EXPIRED: \"tx:expired\",\n  TX_STATUS_UPDATE: \"tx:status_update\",\n  TX_UNAPPROVED: \"tx:unapproved\",\n};\n\nexport interface TransactionMeta<T> {\n  id: string;\n  transaction: T;\n  transactionType: TRANSACTION_TYPE;\n  dappSuggestedTransaction: Partial<T>;\n  chainId: string;\n  origin: string;\n  time: number;\n  status: TransactionStatus;\n  updated_at?: string; // iso date string\n  transactionHash?: string;\n  rawTransaction?: string;\n  txReceipt?: unknown;\n  error?: Error;\n  warning?: {\n    error?: string;\n    message?: string;\n  };\n}\n\nexport type BASE_TX_EVENT_TYPE = {\n  txId: string;\n};\n\nexport type TX_ERROR_EVENT_TYPE = BASE_TX_EVENT_TYPE & {\n  error: Error;\n};\n\nexport type TX_FAILED_EVENT_TYPE = BASE_TX_EVENT_TYPE & {\n  error: Error;\n};\n\nexport type TX_EXPIRED_EVENT_TYPE = BASE_TX_EVENT_TYPE;\n\nexport type TX_WARNING_EVENT_TYPE<T> = BASE_TX_EVENT_TYPE & {\n  txMeta: TransactionMeta<T>;\n};\n\nexport type TX_CONFIRMED_EVENT_TYPE = BASE_TX_EVENT_TYPE & {\n  txReceipt: unknown;\n};\n\nexport type TX_DROPPED_EVENT_TYPE = BASE_TX_EVENT_TYPE;\n\nexport type TX_STATUS_UPDATE_EVENT_TYPE = BASE_TX_EVENT_TYPE & {\n  status: TransactionStatus;\n};\n\nexport type TX_FINISHED_EVENT_TYPE<T> = BASE_TX_EVENT_TYPE & {\n  txMeta: TransactionMeta<T>;\n};\n\n/**\n * Transaction controller configuration\n */\nexport interface TransactionConfig extends BaseConfig {\n  txHistoryLimit: number;\n}\n\n/**\n * Transaction controller state\n */\nexport interface TransactionState<T> extends BaseState {\n  /**\n   * Transactions by key (id) value (TxMeta)\n   */\n  transactions: Record<string, TransactionMeta<T>>; // all transactions (unapprroved and all others)\n  unapprovedTxs?: Record<string, TransactionMeta<T>>; // only unapproved\n  currentNetworkTxsList?: TransactionMeta<T>[];\n}\n\n/**\n * Result\n *\n * result - Promise resolving to a new transaction hash\n * transactionMeta - Meta information about this new transaction\n */\nexport interface Result<T> {\n  result: Promise<string>;\n  transactionMeta: TransactionMeta<T>;\n}\n\nexport interface ITransactionController<T> {\n  /**\n   * Add a new unapproved transaction to state.\n   * @param transaction - Transaction object to add\n   * @returns - Object containing a promise resolving to the transaction hash if approved\n   */\n  addTransaction(transaction: T, req: JRPCRequest<T & { windowId?: string }> & { origin: string }): Promise<Result<T>>;\n\n  /**\n   * Approves a transaction and updates it's status in state.\n   *\n   * @param transactionID - ID of the transaction to approve\n   * @returns - Promise resolving when this operation completes\n   */\n  approveTransaction(transactionID: string): Promise<void>;\n\n  /**\n   * Cancels a transaction based on its ID by setting its status to \"rejected\"\n   *\n   * @param transactionID - ID of the transaction to cancel\n   */\n  cancelTransaction?(transactionID: string): Promise<void>;\n}\n\nexport interface ITransactionStateManager<T> {\n  addTransactionToState(txMeta: TransactionMeta<T>): TransactionMeta<T>;\n\n  wipeTransactions(address: string): void;\n\n  getTransactions(args: {\n    searchCriteria?: Record<string, (val: unknown) => boolean> | Record<string, unknown>;\n    initialList?: TransactionMeta<T>[];\n    filterToCurrentNetwork?: boolean;\n  }): TransactionMeta<T>[];\n  getApprovedTransactions(address?: string): TransactionMeta<T>[];\n  getPendingTransactions(address?: string): TransactionMeta<T>[];\n  getConfirmedTransactions(address?: string): TransactionMeta<T>[];\n}\n","import { BaseConfig, BaseController, BaseState, createEventEmitterProxy, SafeEventEmitterProvider } from \"@toruslabs/base-controllers\";\nimport { CustomChainConfig, WalletInitializationError } from \"@web3auth/base\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { IBaseProvider } from \"./IBaseProvider\";\n\nexport interface BaseProviderState extends BaseState {\n  chainId: string;\n}\n\nexport interface BaseProviderConfig extends BaseConfig {\n  chainConfig: Partial<CustomChainConfig>;\n  networks?: Record<string, CustomChainConfig>;\n  skipLookupNetwork?: boolean;\n}\n\nexport abstract class BaseProvider<C extends BaseProviderConfig, S extends BaseProviderState, P>\n  extends BaseController<C, S>\n  implements IBaseProvider<P>\n{\n  // should be Assigned in setupProvider\n  public _providerEngineProxy: SafeEventEmitterProvider | null = null;\n\n  constructor({ config, state }: { config: C; state?: S }) {\n    super({ config, state });\n    if (!config.chainConfig) throw WalletInitializationError.invalidProviderConfigError(\"Please provide chainConfig\");\n    if (!config.chainConfig.chainId) throw WalletInitializationError.invalidProviderConfigError(\"Please provide chainId inside chainConfig\");\n    if (!config.chainConfig.rpcTarget) throw WalletInitializationError.invalidProviderConfigError(\"Please provide rpcTarget inside chainConfig\");\n    this.defaultState = {\n      chainId: \"loading\",\n    } as S;\n    this.defaultConfig = {\n      chainConfig: config.chainConfig,\n      networks: { [config.chainConfig.chainId]: config.chainConfig },\n    } as C;\n    super.initialize();\n  }\n\n  get provider(): SafeEventEmitterProvider | null {\n    return this._providerEngineProxy;\n  }\n\n  set provider(_) {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  public addChain(chainConfig: CustomChainConfig): void {\n    if (!chainConfig.chainId) throw ethErrors.rpc.invalidParams(\"chainId is required\");\n    if (!chainConfig.rpcTarget) throw ethErrors.rpc.invalidParams(\"chainId is required\");\n    this.configure({\n      networks: { ...this.config.networks, [chainConfig.chainId]: chainConfig },\n    } as C);\n  }\n\n  public getChainConfig(chainId: string): CustomChainConfig | null {\n    const chainConfig = this.config.networks?.[chainId];\n    if (!chainConfig) throw ethErrors.rpc.invalidRequest(`Chain ${chainId} is not supported, please add chainConfig for it`);\n    return chainConfig;\n  }\n\n  protected getProviderEngineProxy(): SafeEventEmitterProvider | null {\n    return this._providerEngineProxy;\n  }\n\n  protected updateProviderEngineProxy(providerEngineProxy: SafeEventEmitterProvider) {\n    if (this._providerEngineProxy) {\n      (this._providerEngineProxy as any).setTarget(providerEngineProxy);\n    } else {\n      this._providerEngineProxy = createEventEmitterProxy<SafeEventEmitterProvider>(providerEngineProxy);\n    }\n  }\n\n  abstract setupProvider(provider: P): Promise<void>;\n\n  abstract switchChain(params: { chainId: string }): Promise<void>;\n\n  protected abstract lookupNetwork(provider?: P): Promise<string | void>;\n}\n","import { createEventEmitterProxy, providerFromEngine, SafeEventEmitterProvider } from \"@toruslabs/base-controllers\";\nimport { createAsyncMiddleware, createScaffoldMiddleware, JRPCEngine, JRPCMiddleware, JRPCRequest, JRPCResponse } from \"@toruslabs/openlogin-jrpc\";\nimport { CustomChainConfig } from \"@web3auth/base\";\n\nimport { IBaseProvider } from \"./IBaseProvider\";\n\nexport class CommonPrivateKeyProvider implements IBaseProvider<string> {\n  // should be Assigned in setupProvider\n  public _providerEngineProxy: SafeEventEmitterProvider | null = null;\n\n  get provider(): SafeEventEmitterProvider | null {\n    return this._providerEngineProxy;\n  }\n\n  set provider(_) {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  public static getProviderInstance = async (params: { privKey: string }): Promise<CommonPrivateKeyProvider> => {\n    const providerFactory = new CommonPrivateKeyProvider();\n    await providerFactory.setupProvider(params.privKey);\n    return providerFactory;\n  };\n\n  addChain(_: CustomChainConfig): void {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  public async setupProvider(privKey: string): Promise<void> {\n    const privKeyMiddleware = this.getPrivKeyMiddleware(privKey);\n    const engine = new JRPCEngine();\n    engine.push(privKeyMiddleware);\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n  }\n\n  public async switchChain(_: { chainId: string }): Promise<void> {\n    return Promise.resolve();\n  }\n\n  protected getProviderEngineProxy(): SafeEventEmitterProvider | null {\n    return this._providerEngineProxy;\n  }\n\n  protected updateProviderEngineProxy(providerEngineProxy: SafeEventEmitterProvider) {\n    if (this._providerEngineProxy) {\n      (this._providerEngineProxy as any).setTarget(providerEngineProxy);\n    } else {\n      this._providerEngineProxy = createEventEmitterProxy<SafeEventEmitterProvider>(providerEngineProxy);\n    }\n  }\n\n  private getPrivKeyMiddleware(privKey: string): JRPCMiddleware<unknown, unknown> {\n    const middleware = {\n      getPrivatekey: async (): Promise<string> => {\n        return privKey;\n      },\n    };\n    return this.createPrivKeyMiddleware(middleware);\n  }\n\n  private createPrivKeyMiddleware({ getPrivatekey }): JRPCMiddleware<unknown, unknown> {\n    async function getPrivatekeyHandler(_: JRPCRequest<{ privateKey: string }[]>, res: JRPCResponse<unknown>): Promise<void> {\n      res.result = await getPrivatekey();\n    }\n\n    return createScaffoldMiddleware({\n      private_key: createAsyncMiddleware(getPrivatekeyHandler),\n    });\n  }\n}\n","import getCreateRandomId from \"json-rpc-random-id\";\nexport const createRandomId = getCreateRandomId();\n",";(function (globalObject) {\r\n  'use strict';\r\n\r\n/*\r\n *      bignumber.js v9.0.2\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2021 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |  sum\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\n  var BigNumber,\r\n    isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n    mathceil = Math.ceil,\r\n    mathfloor = Math.floor,\r\n\r\n    bignumberError = '[BigNumber Error] ',\r\n    tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n    BASE = 1e14,\r\n    LOG_BASE = 14,\r\n    MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n    // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n    POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n    SQRT_BASE = 1e7,\r\n\r\n    // EDITABLE\r\n    // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n    // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n    MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n  /*\r\n   * Create and return a BigNumber constructor.\r\n   */\r\n  function clone(configObject) {\r\n    var div, convertBase, parseNumeric,\r\n      P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n      ONE = new BigNumber(1),\r\n\r\n\r\n      //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n      // The default values below must be integers within the inclusive ranges stated.\r\n      // The values can also be changed at run-time using BigNumber.set.\r\n\r\n      // The maximum number of decimal places for operations involving division.\r\n      DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n      // The rounding mode used when rounding to the above decimal places, and when using\r\n      // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n      // UP         0 Away from zero.\r\n      // DOWN       1 Towards zero.\r\n      // CEIL       2 Towards +Infinity.\r\n      // FLOOR      3 Towards -Infinity.\r\n      // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n      // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n      // The exponent value at and beneath which toString returns exponential notation.\r\n      // Number type: -7\r\n      TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n      // The exponent value at and above which toString returns exponential notation.\r\n      // Number type: 21\r\n      TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n      // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n      // The minimum exponent value, beneath which underflow to zero occurs.\r\n      // Number type: -324  (5e-324)\r\n      MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n      // The maximum exponent value, above which overflow to Infinity occurs.\r\n      // Number type:  308  (1.7976931348623157e+308)\r\n      // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n      MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n      // Whether to use cryptographically-secure random number generation, if available.\r\n      CRYPTO = false,                          // true or false\r\n\r\n      // The modulo mode used when calculating the modulus: a mod n.\r\n      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n      // The remainder (r) is calculated as: r = a - n * q.\r\n      //\r\n      // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n      // DOWN      1 The remainder has the same sign as the dividend.\r\n      //             This modulo mode is commonly known as 'truncated division' and is\r\n      //             equivalent to (a % n) in JavaScript.\r\n      // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n      // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n      // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n      //             The remainder is always positive.\r\n      //\r\n      // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n      // modes are commonly used for the modulus operation.\r\n      // Although the other rounding modes can also be used, they may not give useful results.\r\n      MODULO_MODE = 1,                         // 0 to 9\r\n\r\n      // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n      // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n      POW_PRECISION = 0,                       // 0 to MAX\r\n\r\n      // The format specification used by the BigNumber.prototype.toFormat method.\r\n      FORMAT = {\r\n        prefix: '',\r\n        groupSize: 3,\r\n        secondaryGroupSize: 0,\r\n        groupSeparator: ',',\r\n        decimalSeparator: '.',\r\n        fractionGroupSize: 0,\r\n        fractionGroupSeparator: '\\xA0',        // non-breaking space\r\n        suffix: ''\r\n      },\r\n\r\n      // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\r\n      // '-', '.', whitespace, or repeated character.\r\n      // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n      ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz',\r\n      alphabetHasNormalDecimalDigits = true;\r\n\r\n\r\n    //------------------------------------------------------------------------------------------\r\n\r\n\r\n    // CONSTRUCTOR\r\n\r\n\r\n    /*\r\n     * The BigNumber constructor and exported function.\r\n     * Create and return a new instance of a BigNumber object.\r\n     *\r\n     * v {number|string|BigNumber} A numeric value.\r\n     * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n     */\r\n    function BigNumber(v, b) {\r\n      var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n        x = this;\r\n\r\n      // Enable constructor call without `new`.\r\n      if (!(x instanceof BigNumber)) return new BigNumber(v, b);\r\n\r\n      if (b == null) {\r\n\r\n        if (v && v._isBigNumber === true) {\r\n          x.s = v.s;\r\n\r\n          if (!v.c || v.e > MAX_EXP) {\r\n            x.c = x.e = null;\r\n          } else if (v.e < MIN_EXP) {\r\n            x.c = [x.e = 0];\r\n          } else {\r\n            x.e = v.e;\r\n            x.c = v.c.slice();\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        if ((isNum = typeof v == 'number') && v * 0 == 0) {\r\n\r\n          // Use `1 / n` to handle minus zero also.\r\n          x.s = 1 / v < 0 ? (v = -v, -1) : 1;\r\n\r\n          // Fast path for integers, where n < 2147483648 (2**31).\r\n          if (v === ~~v) {\r\n            for (e = 0, i = v; i >= 10; i /= 10, e++);\r\n\r\n            if (e > MAX_EXP) {\r\n              x.c = x.e = null;\r\n            } else {\r\n              x.e = e;\r\n              x.c = [v];\r\n            }\r\n\r\n            return;\r\n          }\r\n\r\n          str = String(v);\r\n        } else {\r\n\r\n          if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\r\n\r\n          x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n        // Exponential form?\r\n        if ((i = str.search(/e/i)) > 0) {\r\n\r\n          // Determine exponent.\r\n          if (e < 0) e = i;\r\n          e += +str.slice(i + 1);\r\n          str = str.substring(0, i);\r\n        } else if (e < 0) {\r\n\r\n          // Integer.\r\n          e = str.length;\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n\r\n        // Allow exponential notation to be used with base 10 argument, while\r\n        // also rounding to DECIMAL_PLACES as with other bases.\r\n        if (b == 10 && alphabetHasNormalDecimalDigits) {\r\n          x = new BigNumber(v);\r\n          return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n        }\r\n\r\n        str = String(v);\r\n\r\n        if (isNum = typeof v == 'number') {\r\n\r\n          // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n          if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n          x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n          // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n          if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n            throw Error\r\n             (tooManyDigits + v);\r\n          }\r\n        } else {\r\n          x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        alphabet = ALPHABET.slice(0, b);\r\n        e = i = 0;\r\n\r\n        // Check that str is a valid base b number.\r\n        // Don't use RegExp, so alphabet can contain special characters.\r\n        for (len = str.length; i < len; i++) {\r\n          if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n            if (c == '.') {\r\n\r\n              // If '.' is not the first character and it has not be found before.\r\n              if (i > e) {\r\n                e = len;\r\n                continue;\r\n              }\r\n            } else if (!caseChanged) {\r\n\r\n              // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n              if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                  str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n                caseChanged = true;\r\n                i = -1;\r\n                e = 0;\r\n                continue;\r\n              }\r\n            }\r\n\r\n            return parseNumeric(x, String(v), isNum, b);\r\n          }\r\n        }\r\n\r\n        // Prevent later check for length on converted number.\r\n        isNum = false;\r\n        str = convertBase(str, b, 10, x.s);\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n        else e = str.length;\r\n      }\r\n\r\n      // Determine leading zeros.\r\n      for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n      // Determine trailing zeros.\r\n      for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n      if (str = str.slice(i, ++len)) {\r\n        len -= i;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (isNum && BigNumber.DEBUG &&\r\n          len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\r\n            throw Error\r\n             (tooManyDigits + (x.s * v));\r\n        }\r\n\r\n         // Overflow?\r\n        if ((e = e - i - 1) > MAX_EXP) {\r\n\r\n          // Infinity.\r\n          x.c = x.e = null;\r\n\r\n        // Underflow?\r\n        } else if (e < MIN_EXP) {\r\n\r\n          // Zero.\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = e;\r\n          x.c = [];\r\n\r\n          // Transform base\r\n\r\n          // e is the base 10 exponent.\r\n          // i is where to slice str to get the first element of the coefficient array.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (e < 0) i += LOG_BASE;  // i < 1\r\n\r\n          if (i < len) {\r\n            if (i) x.c.push(+str.slice(0, i));\r\n\r\n            for (len -= LOG_BASE; i < len;) {\r\n              x.c.push(+str.slice(i, i += LOG_BASE));\r\n            }\r\n\r\n            i = LOG_BASE - (str = str.slice(i)).length;\r\n          } else {\r\n            i -= len;\r\n          }\r\n\r\n          for (; i--; str += '0');\r\n          x.c.push(+str);\r\n        }\r\n      } else {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n\r\n    // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n    BigNumber.clone = clone;\r\n\r\n    BigNumber.ROUND_UP = 0;\r\n    BigNumber.ROUND_DOWN = 1;\r\n    BigNumber.ROUND_CEIL = 2;\r\n    BigNumber.ROUND_FLOOR = 3;\r\n    BigNumber.ROUND_HALF_UP = 4;\r\n    BigNumber.ROUND_HALF_DOWN = 5;\r\n    BigNumber.ROUND_HALF_EVEN = 6;\r\n    BigNumber.ROUND_HALF_CEIL = 7;\r\n    BigNumber.ROUND_HALF_FLOOR = 8;\r\n    BigNumber.EUCLID = 9;\r\n\r\n\r\n    /*\r\n     * Configure infrequently-changing library-wide settings.\r\n     *\r\n     * Accept an object with the following optional properties (if the value of a property is\r\n     * a number, it must be an integer within the inclusive range stated):\r\n     *\r\n     *   DECIMAL_PLACES   {number}           0 to MAX\r\n     *   ROUNDING_MODE    {number}           0 to 8\r\n     *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n     *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n     *   CRYPTO           {boolean}          true or false\r\n     *   MODULO_MODE      {number}           0 to 9\r\n     *   POW_PRECISION       {number}           0 to MAX\r\n     *   ALPHABET         {string}           A string of two or more unique characters which does\r\n     *                                       not contain '.'.\r\n     *   FORMAT           {object}           An object with some of the following properties:\r\n     *     prefix                 {string}\r\n     *     groupSize              {number}\r\n     *     secondaryGroupSize     {number}\r\n     *     groupSeparator         {string}\r\n     *     decimalSeparator       {string}\r\n     *     fractionGroupSize      {number}\r\n     *     fractionGroupSeparator {string}\r\n     *     suffix                 {string}\r\n     *\r\n     * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n     *\r\n     * E.g.\r\n     * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n     *\r\n     * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n     *\r\n     * Return an object with the properties current values.\r\n     */\r\n    BigNumber.config = BigNumber.set = function (obj) {\r\n      var p, v;\r\n\r\n      if (obj != null) {\r\n\r\n        if (typeof obj == 'object') {\r\n\r\n          // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            DECIMAL_PLACES = v;\r\n          }\r\n\r\n          // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n          // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 8, p);\r\n            ROUNDING_MODE = v;\r\n          }\r\n\r\n          // EXPONENTIAL_AT {number|number[]}\r\n          // Integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n          // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, 0, p);\r\n              intCheck(v[1], 0, MAX, p);\r\n              TO_EXP_NEG = v[0];\r\n              TO_EXP_POS = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n            }\r\n          }\r\n\r\n          // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n          // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n          if (obj.hasOwnProperty(p = 'RANGE')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, -1, p);\r\n              intCheck(v[1], 1, MAX, p);\r\n              MIN_EXP = v[0];\r\n              MAX_EXP = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              if (v) {\r\n                MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n              } else {\r\n                throw Error\r\n                 (bignumberError + p + ' cannot be zero: ' + v);\r\n              }\r\n            }\r\n          }\r\n\r\n          // CRYPTO {boolean} true or false.\r\n          // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n          // '[BigNumber Error] crypto unavailable'\r\n          if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n            v = obj[p];\r\n            if (v === !!v) {\r\n              if (v) {\r\n                if (typeof crypto != 'undefined' && crypto &&\r\n                 (crypto.getRandomValues || crypto.randomBytes)) {\r\n                  CRYPTO = v;\r\n                } else {\r\n                  CRYPTO = !v;\r\n                  throw Error\r\n                   (bignumberError + 'crypto unavailable');\r\n                }\r\n              } else {\r\n                CRYPTO = v;\r\n              }\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' not true or false: ' + v);\r\n            }\r\n          }\r\n\r\n          // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n          // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 9, p);\r\n            MODULO_MODE = v;\r\n          }\r\n\r\n          // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            POW_PRECISION = v;\r\n          }\r\n\r\n          // FORMAT {object}\r\n          // '[BigNumber Error] FORMAT not an object: {v}'\r\n          if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n            v = obj[p];\r\n            if (typeof v == 'object') FORMAT = v;\r\n            else throw Error\r\n             (bignumberError + p + ' not an object: ' + v);\r\n          }\r\n\r\n          // ALPHABET {string}\r\n          // '[BigNumber Error] ALPHABET invalid: {v}'\r\n          if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n            v = obj[p];\r\n\r\n            // Disallow if less than two characters,\r\n            // or if it contains '+', '-', '.', whitespace, or a repeated character.\r\n            if (typeof v == 'string' && !/^.?$|[+\\-.\\s]|(.).*\\1/.test(v)) {\r\n              alphabetHasNormalDecimalDigits = v.slice(0, 10) == '0123456789';\r\n              ALPHABET = v;\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' invalid: ' + v);\r\n            }\r\n          }\r\n\r\n        } else {\r\n\r\n          // '[BigNumber Error] Object expected: {v}'\r\n          throw Error\r\n           (bignumberError + 'Object expected: ' + obj);\r\n        }\r\n      }\r\n\r\n      return {\r\n        DECIMAL_PLACES: DECIMAL_PLACES,\r\n        ROUNDING_MODE: ROUNDING_MODE,\r\n        EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n        RANGE: [MIN_EXP, MAX_EXP],\r\n        CRYPTO: CRYPTO,\r\n        MODULO_MODE: MODULO_MODE,\r\n        POW_PRECISION: POW_PRECISION,\r\n        FORMAT: FORMAT,\r\n        ALPHABET: ALPHABET\r\n      };\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if v is a BigNumber instance, otherwise return false.\r\n     *\r\n     * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n     *\r\n     * v {any}\r\n     *\r\n     * '[BigNumber Error] Invalid BigNumber: {v}'\r\n     */\r\n    BigNumber.isBigNumber = function (v) {\r\n      if (!v || v._isBigNumber !== true) return false;\r\n      if (!BigNumber.DEBUG) return true;\r\n\r\n      var i, n,\r\n        c = v.c,\r\n        e = v.e,\r\n        s = v.s;\r\n\r\n      out: if ({}.toString.call(c) == '[object Array]') {\r\n\r\n        if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\r\n\r\n          // If the first element is zero, the BigNumber value must be zero.\r\n          if (c[0] === 0) {\r\n            if (e === 0 && c.length === 1) return true;\r\n            break out;\r\n          }\r\n\r\n          // Calculate number of digits that c[0] should have, based on the exponent.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (i < 1) i += LOG_BASE;\r\n\r\n          // Calculate number of digits of c[0].\r\n          //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\r\n          if (String(c[0]).length == i) {\r\n\r\n            for (i = 0; i < c.length; i++) {\r\n              n = c[i];\r\n              if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\r\n            }\r\n\r\n            // Last element cannot be zero, unless it is the only element.\r\n            if (n !== 0) return true;\r\n          }\r\n        }\r\n\r\n      // Infinity/NaN\r\n      } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\r\n        return true;\r\n      }\r\n\r\n      throw Error\r\n        (bignumberError + 'Invalid BigNumber: ' + v);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the maximum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.maximum = BigNumber.max = function () {\r\n      return maxOrMin(arguments, P.lt);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the minimum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.minimum = BigNumber.min = function () {\r\n      return maxOrMin(arguments, P.gt);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n     * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n     * zeros are produced).\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n     * '[BigNumber Error] crypto unavailable'\r\n     */\r\n    BigNumber.random = (function () {\r\n      var pow2_53 = 0x20000000000000;\r\n\r\n      // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n      // Check if Math.random() produces more than 32 bits of randomness.\r\n      // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n      // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n      var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n       ? function () { return mathfloor(Math.random() * pow2_53); }\r\n       : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n         (Math.random() * 0x800000 | 0); };\r\n\r\n      return function (dp) {\r\n        var a, b, e, k, v,\r\n          i = 0,\r\n          c = [],\r\n          rand = new BigNumber(ONE);\r\n\r\n        if (dp == null) dp = DECIMAL_PLACES;\r\n        else intCheck(dp, 0, MAX);\r\n\r\n        k = mathceil(dp / LOG_BASE);\r\n\r\n        if (CRYPTO) {\r\n\r\n          // Browsers supporting crypto.getRandomValues.\r\n          if (crypto.getRandomValues) {\r\n\r\n            a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n            for (; i < k;) {\r\n\r\n              // 53 bits:\r\n              // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n              // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n              // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n              //                                     11111 11111111 11111111\r\n              // 0x20000 is 2^21.\r\n              v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n              // Rejection sampling:\r\n              // 0 <= v < 9007199254740992\r\n              // Probability that v >= 9e15, is\r\n              // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n              if (v >= 9e15) {\r\n                b = crypto.getRandomValues(new Uint32Array(2));\r\n                a[i] = b[0];\r\n                a[i + 1] = b[1];\r\n              } else {\r\n\r\n                // 0 <= v <= 8999999999999999\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 2;\r\n              }\r\n            }\r\n            i = k / 2;\r\n\r\n          // Node.js supporting crypto.randomBytes.\r\n          } else if (crypto.randomBytes) {\r\n\r\n            // buffer\r\n            a = crypto.randomBytes(k *= 7);\r\n\r\n            for (; i < k;) {\r\n\r\n              // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n              // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n              // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n              // 0 <= v < 9007199254740992\r\n              v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n                 (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n                 (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n              if (v >= 9e15) {\r\n                crypto.randomBytes(7).copy(a, i);\r\n              } else {\r\n\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 7;\r\n              }\r\n            }\r\n            i = k / 7;\r\n          } else {\r\n            CRYPTO = false;\r\n            throw Error\r\n             (bignumberError + 'crypto unavailable');\r\n          }\r\n        }\r\n\r\n        // Use Math.random.\r\n        if (!CRYPTO) {\r\n\r\n          for (; i < k;) {\r\n            v = random53bitInt();\r\n            if (v < 9e15) c[i++] = v % 1e14;\r\n          }\r\n        }\r\n\r\n        k = c[--i];\r\n        dp %= LOG_BASE;\r\n\r\n        // Convert trailing digits to zeros according to dp.\r\n        if (k && dp) {\r\n          v = POWS_TEN[LOG_BASE - dp];\r\n          c[i] = mathfloor(k / v) * v;\r\n        }\r\n\r\n        // Remove trailing elements which are zero.\r\n        for (; c[i] === 0; c.pop(), i--);\r\n\r\n        // Zero?\r\n        if (i < 0) {\r\n          c = [e = 0];\r\n        } else {\r\n\r\n          // Remove leading elements which are zero and adjust exponent accordingly.\r\n          for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n          // Count the digits of the first element of c to determine leading zeros, and...\r\n          for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n          // adjust the exponent accordingly.\r\n          if (i < LOG_BASE) e -= LOG_BASE - i;\r\n        }\r\n\r\n        rand.e = e;\r\n        rand.c = c;\r\n        return rand;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the sum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.sum = function () {\r\n      var i = 1,\r\n        args = arguments,\r\n        sum = new BigNumber(args[0]);\r\n      for (; i < args.length;) sum = sum.plus(args[i++]);\r\n      return sum;\r\n    };\r\n\r\n\r\n    // PRIVATE FUNCTIONS\r\n\r\n\r\n    // Called by BigNumber and BigNumber.prototype.toString.\r\n    convertBase = (function () {\r\n      var decimal = '0123456789';\r\n\r\n      /*\r\n       * Convert string of baseIn to an array of numbers of baseOut.\r\n       * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n       * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n       */\r\n      function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n        var j,\r\n          arr = [0],\r\n          arrL,\r\n          i = 0,\r\n          len = str.length;\r\n\r\n        for (; i < len;) {\r\n          for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n          arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n          for (j = 0; j < arr.length; j++) {\r\n\r\n            if (arr[j] > baseOut - 1) {\r\n              if (arr[j + 1] == null) arr[j + 1] = 0;\r\n              arr[j + 1] += arr[j] / baseOut | 0;\r\n              arr[j] %= baseOut;\r\n            }\r\n          }\r\n        }\r\n\r\n        return arr.reverse();\r\n      }\r\n\r\n      // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n      // If the caller is toString, we are converting from base 10 to baseOut.\r\n      // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n      return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n        var alphabet, d, e, k, r, x, xc, y,\r\n          i = str.indexOf('.'),\r\n          dp = DECIMAL_PLACES,\r\n          rm = ROUNDING_MODE;\r\n\r\n        // Non-integer.\r\n        if (i >= 0) {\r\n          k = POW_PRECISION;\r\n\r\n          // Unlimited precision.\r\n          POW_PRECISION = 0;\r\n          str = str.replace('.', '');\r\n          y = new BigNumber(baseIn);\r\n          x = y.pow(str.length - i);\r\n          POW_PRECISION = k;\r\n\r\n          // Convert str as if an integer, then restore the fraction part by dividing the\r\n          // result by its base raised to a power.\r\n\r\n          y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n           10, baseOut, decimal);\r\n          y.e = y.c.length;\r\n        }\r\n\r\n        // Convert the number as integer.\r\n\r\n        xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n         ? (alphabet = ALPHABET, decimal)\r\n         : (alphabet = decimal, ALPHABET));\r\n\r\n        // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n        e = k = xc.length;\r\n\r\n        // Remove trailing zeros.\r\n        for (; xc[--k] == 0; xc.pop());\r\n\r\n        // Zero?\r\n        if (!xc[0]) return alphabet.charAt(0);\r\n\r\n        // Does str represent an integer? If so, no need for the division.\r\n        if (i < 0) {\r\n          --e;\r\n        } else {\r\n          x.c = xc;\r\n          x.e = e;\r\n\r\n          // The sign is needed for correct rounding.\r\n          x.s = sign;\r\n          x = div(x, y, dp, rm, baseOut);\r\n          xc = x.c;\r\n          r = x.r;\r\n          e = x.e;\r\n        }\r\n\r\n        // xc now represents str converted to baseOut.\r\n\r\n        // THe index of the rounding digit.\r\n        d = e + dp + 1;\r\n\r\n        // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n        i = xc[d];\r\n\r\n        // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n        k = baseOut / 2;\r\n        r = r || d < 0 || xc[d + 1] != null;\r\n\r\n        r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n              : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n               rm == (x.s < 0 ? 8 : 7));\r\n\r\n        // If the index of the rounding digit is not greater than zero, or xc represents\r\n        // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n        // such as 0.00001.\r\n        if (d < 1 || !xc[0]) {\r\n\r\n          // 1^-dp or 0\r\n          str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\r\n        } else {\r\n\r\n          // Truncate xc to the required number of decimal places.\r\n          xc.length = d;\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            // Rounding up may mean the previous digit has to be rounded up and so on.\r\n            for (--baseOut; ++xc[--d] > baseOut;) {\r\n              xc[d] = 0;\r\n\r\n              if (!d) {\r\n                ++e;\r\n                xc = [1].concat(xc);\r\n              }\r\n            }\r\n          }\r\n\r\n          // Determine trailing zeros.\r\n          for (k = xc.length; !xc[--k];);\r\n\r\n          // E.g. [4, 11, 15] becomes 4bf.\r\n          for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n          // Add leading zeros, decimal point and trailing zeros as required.\r\n          str = toFixedPoint(str, e, alphabet.charAt(0));\r\n        }\r\n\r\n        // The caller will add the sign.\r\n        return str;\r\n      };\r\n    })();\r\n\r\n\r\n    // Perform division in the specified base. Called by div and convertBase.\r\n    div = (function () {\r\n\r\n      // Assume non-zero x and k.\r\n      function multiply(x, k, base) {\r\n        var m, temp, xlo, xhi,\r\n          carry = 0,\r\n          i = x.length,\r\n          klo = k % SQRT_BASE,\r\n          khi = k / SQRT_BASE | 0;\r\n\r\n        for (x = x.slice(); i--;) {\r\n          xlo = x[i] % SQRT_BASE;\r\n          xhi = x[i] / SQRT_BASE | 0;\r\n          m = khi * xlo + xhi * klo;\r\n          temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n          carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n          x[i] = temp % base;\r\n        }\r\n\r\n        if (carry) x = [carry].concat(x);\r\n\r\n        return x;\r\n      }\r\n\r\n      function compare(a, b, aL, bL) {\r\n        var i, cmp;\r\n\r\n        if (aL != bL) {\r\n          cmp = aL > bL ? 1 : -1;\r\n        } else {\r\n\r\n          for (i = cmp = 0; i < aL; i++) {\r\n\r\n            if (a[i] != b[i]) {\r\n              cmp = a[i] > b[i] ? 1 : -1;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        return cmp;\r\n      }\r\n\r\n      function subtract(a, b, aL, base) {\r\n        var i = 0;\r\n\r\n        // Subtract b from a.\r\n        for (; aL--;) {\r\n          a[aL] -= i;\r\n          i = a[aL] < b[aL] ? 1 : 0;\r\n          a[aL] = i * base + a[aL] - b[aL];\r\n        }\r\n\r\n        // Remove leading zeros.\r\n        for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n      }\r\n\r\n      // x: dividend, y: divisor.\r\n      return function (x, y, dp, rm, base) {\r\n        var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n          yL, yz,\r\n          s = x.s == y.s ? 1 : -1,\r\n          xc = x.c,\r\n          yc = y.c;\r\n\r\n        // Either NaN, Infinity or 0?\r\n        if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n          return new BigNumber(\r\n\r\n           // Return NaN if either NaN, or both Infinity or 0.\r\n           !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n            // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\r\n            xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n         );\r\n        }\r\n\r\n        q = new BigNumber(s);\r\n        qc = q.c = [];\r\n        e = x.e - y.e;\r\n        s = dp + e + 1;\r\n\r\n        if (!base) {\r\n          base = BASE;\r\n          e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n          s = s / LOG_BASE | 0;\r\n        }\r\n\r\n        // Result exponent may be one less then the current value of e.\r\n        // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n        for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n        if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n        if (s < 0) {\r\n          qc.push(1);\r\n          more = true;\r\n        } else {\r\n          xL = xc.length;\r\n          yL = yc.length;\r\n          i = 0;\r\n          s += 2;\r\n\r\n          // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n          n = mathfloor(base / (yc[0] + 1));\r\n\r\n          // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n          // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n          if (n > 1) {\r\n            yc = multiply(yc, n, base);\r\n            xc = multiply(xc, n, base);\r\n            yL = yc.length;\r\n            xL = xc.length;\r\n          }\r\n\r\n          xi = yL;\r\n          rem = xc.slice(0, yL);\r\n          remL = rem.length;\r\n\r\n          // Add zeros to make remainder as long as divisor.\r\n          for (; remL < yL; rem[remL++] = 0);\r\n          yz = yc.slice();\r\n          yz = [0].concat(yz);\r\n          yc0 = yc[0];\r\n          if (yc[1] >= base / 2) yc0++;\r\n          // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n          // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n          do {\r\n            n = 0;\r\n\r\n            // Compare divisor and remainder.\r\n            cmp = compare(yc, rem, yL, remL);\r\n\r\n            // If divisor < remainder.\r\n            if (cmp < 0) {\r\n\r\n              // Calculate trial digit, n.\r\n\r\n              rem0 = rem[0];\r\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n              // n is how many times the divisor goes into the current remainder.\r\n              n = mathfloor(rem0 / yc0);\r\n\r\n              //  Algorithm:\r\n              //  product = divisor multiplied by trial digit (n).\r\n              //  Compare product and remainder.\r\n              //  If product is greater than remainder:\r\n              //    Subtract divisor from product, decrement trial digit.\r\n              //  Subtract product from remainder.\r\n              //  If product was less than remainder at the last compare:\r\n              //    Compare new remainder and divisor.\r\n              //    If remainder is greater than divisor:\r\n              //      Subtract divisor from remainder, increment trial digit.\r\n\r\n              if (n > 1) {\r\n\r\n                // n may be > base only when base is 3.\r\n                if (n >= base) n = base - 1;\r\n\r\n                // product = divisor * trial digit.\r\n                prod = multiply(yc, n, base);\r\n                prodL = prod.length;\r\n                remL = rem.length;\r\n\r\n                // Compare product and remainder.\r\n                // If product > remainder then trial digit n too high.\r\n                // n is 1 too high about 5% of the time, and is not known to have\r\n                // ever been more than 1 too high.\r\n                while (compare(prod, rem, prodL, remL) == 1) {\r\n                  n--;\r\n\r\n                  // Subtract divisor from product.\r\n                  subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                  prodL = prod.length;\r\n                  cmp = 1;\r\n                }\r\n              } else {\r\n\r\n                // n is 0 or 1, cmp is -1.\r\n                // If n is 0, there is no need to compare yc and rem again below,\r\n                // so change cmp to 1 to avoid it.\r\n                // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n                if (n == 0) {\r\n\r\n                  // divisor < remainder, so n must be at least 1.\r\n                  cmp = n = 1;\r\n                }\r\n\r\n                // product = divisor\r\n                prod = yc.slice();\r\n                prodL = prod.length;\r\n              }\r\n\r\n              if (prodL < remL) prod = [0].concat(prod);\r\n\r\n              // Subtract product from remainder.\r\n              subtract(rem, prod, remL, base);\r\n              remL = rem.length;\r\n\r\n               // If product was < remainder.\r\n              if (cmp == -1) {\r\n\r\n                // Compare divisor and new remainder.\r\n                // If divisor < new remainder, subtract divisor from remainder.\r\n                // Trial digit n too low.\r\n                // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n                while (compare(yc, rem, yL, remL) < 1) {\r\n                  n++;\r\n\r\n                  // Subtract divisor from remainder.\r\n                  subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                  remL = rem.length;\r\n                }\r\n              }\r\n            } else if (cmp === 0) {\r\n              n++;\r\n              rem = [0];\r\n            } // else cmp === 1 and n will be 0\r\n\r\n            // Add the next digit, n, to the result array.\r\n            qc[i++] = n;\r\n\r\n            // Update the remainder.\r\n            if (rem[0]) {\r\n              rem[remL++] = xc[xi] || 0;\r\n            } else {\r\n              rem = [xc[xi]];\r\n              remL = 1;\r\n            }\r\n          } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n          more = rem[0] != null;\r\n\r\n          // Leading zero?\r\n          if (!qc[0]) qc.splice(0, 1);\r\n        }\r\n\r\n        if (base == BASE) {\r\n\r\n          // To calculate q.e, first get the number of digits of qc[0].\r\n          for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n          round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n        // Caller is convertBase.\r\n        } else {\r\n          q.e = e;\r\n          q.r = +more;\r\n        }\r\n\r\n        return q;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n     * notation rounded to the specified decimal places or significant digits.\r\n     *\r\n     * n: a BigNumber.\r\n     * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n     * rm: the rounding mode.\r\n     * id: 1 (toExponential) or 2 (toPrecision).\r\n     */\r\n    function format(n, i, rm, id) {\r\n      var c0, e, ne, len, str;\r\n\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      if (!n.c) return n.toString();\r\n\r\n      c0 = n.c[0];\r\n      ne = n.e;\r\n\r\n      if (i == null) {\r\n        str = coeffToString(n.c);\r\n        str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)\r\n         ? toExponential(str, ne)\r\n         : toFixedPoint(str, ne, '0');\r\n      } else {\r\n        n = round(new BigNumber(n), i, rm);\r\n\r\n        // n.e may have changed if the value was rounded up.\r\n        e = n.e;\r\n\r\n        str = coeffToString(n.c);\r\n        len = str.length;\r\n\r\n        // toPrecision returns exponential notation if the number of significant digits\r\n        // specified is less than the number of digits necessary to represent the integer\r\n        // part of the value in fixed-point notation.\r\n\r\n        // Exponential notation.\r\n        if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n          // Append zeros?\r\n          for (; len < i; str += '0', len++);\r\n          str = toExponential(str, e);\r\n\r\n        // Fixed-point notation.\r\n        } else {\r\n          i -= ne;\r\n          str = toFixedPoint(str, e, '0');\r\n\r\n          // Append zeros?\r\n          if (e + 1 > len) {\r\n            if (--i > 0) for (str += '.'; i--; str += '0');\r\n          } else {\r\n            i += e - len;\r\n            if (i > 0) {\r\n              if (e + 1 == len) str += '.';\r\n              for (; i--; str += '0');\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return n.s < 0 && c0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // Handle BigNumber.max and BigNumber.min.\r\n    function maxOrMin(args, method) {\r\n      var n,\r\n        i = 1,\r\n        m = new BigNumber(args[0]);\r\n\r\n      for (; i < args.length; i++) {\r\n        n = new BigNumber(args[i]);\r\n\r\n        // If any number is NaN, return NaN.\r\n        if (!n.s) {\r\n          m = n;\r\n          break;\r\n        } else if (method.call(m, n)) {\r\n          m = n;\r\n        }\r\n      }\r\n\r\n      return m;\r\n    }\r\n\r\n\r\n    /*\r\n     * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n     * Called by minus, plus and times.\r\n     */\r\n    function normalise(n, c, e) {\r\n      var i = 1,\r\n        j = c.length;\r\n\r\n       // Remove trailing zeros.\r\n      for (; !c[--j]; c.pop());\r\n\r\n      // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n      for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n      // Overflow?\r\n      if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        n.c = n.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        n.c = [n.e = 0];\r\n      } else {\r\n        n.e = e;\r\n        n.c = c;\r\n      }\r\n\r\n      return n;\r\n    }\r\n\r\n\r\n    // Handle values that fail the validity test in BigNumber.\r\n    parseNumeric = (function () {\r\n      var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n        dotAfter = /^([^.]+)\\.$/,\r\n        dotBefore = /^\\.([^.]+)$/,\r\n        isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n        whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n      return function (x, str, isNum, b) {\r\n        var base,\r\n          s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n        // No exception on ±Infinity or NaN.\r\n        if (isInfinityOrNaN.test(s)) {\r\n          x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n        } else {\r\n          if (!isNum) {\r\n\r\n            // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n            s = s.replace(basePrefix, function (m, p1, p2) {\r\n              base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n              return !b || b == base ? p1 : m;\r\n            });\r\n\r\n            if (b) {\r\n              base = b;\r\n\r\n              // E.g. '1.' to '1', '.1' to '0.1'\r\n              s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n            }\r\n\r\n            if (str != s) return new BigNumber(s, base);\r\n          }\r\n\r\n          // '[BigNumber Error] Not a number: {n}'\r\n          // '[BigNumber Error] Not a base {b} number: {n}'\r\n          if (BigNumber.DEBUG) {\r\n            throw Error\r\n              (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n          }\r\n\r\n          // NaN\r\n          x.s = null;\r\n        }\r\n\r\n        x.c = x.e = null;\r\n      }\r\n    })();\r\n\r\n\r\n    /*\r\n     * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n     * If r is truthy, it is known that there are more digits after the rounding digit.\r\n     */\r\n    function round(x, sd, rm, r) {\r\n      var d, i, j, k, n, ni, rd,\r\n        xc = x.c,\r\n        pows10 = POWS_TEN;\r\n\r\n      // if x is not Infinity or NaN...\r\n      if (xc) {\r\n\r\n        // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n        // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n        // ni is the index of n within x.c.\r\n        // d is the number of digits of n.\r\n        // i is the index of rd within n including leading zeros.\r\n        // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n        out: {\r\n\r\n          // Get the number of digits of the first element of xc.\r\n          for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n          i = sd - d;\r\n\r\n          // If the rounding digit is in the first element of xc...\r\n          if (i < 0) {\r\n            i += LOG_BASE;\r\n            j = sd;\r\n            n = xc[ni = 0];\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = n / pows10[d - j - 1] % 10 | 0;\r\n          } else {\r\n            ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n            if (ni >= xc.length) {\r\n\r\n              if (r) {\r\n\r\n                // Needed by sqrt.\r\n                for (; xc.length <= ni; xc.push(0));\r\n                n = rd = 0;\r\n                d = 1;\r\n                i %= LOG_BASE;\r\n                j = i - LOG_BASE + 1;\r\n              } else {\r\n                break out;\r\n              }\r\n            } else {\r\n              n = k = xc[ni];\r\n\r\n              // Get the number of digits of n.\r\n              for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n              // Get the index of rd within n.\r\n              i %= LOG_BASE;\r\n\r\n              // Get the index of rd within n, adjusted for leading zeros.\r\n              // The number of leading zeros of n is given by LOG_BASE - d.\r\n              j = i - LOG_BASE + d;\r\n\r\n              // Get the rounding digit at index j of n.\r\n              rd = j < 0 ? 0 : n / pows10[d - j - 1] % 10 | 0;\r\n            }\r\n          }\r\n\r\n          r = r || sd < 0 ||\r\n\r\n          // Are there any non-zero digits after the rounding digit?\r\n          // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n          // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n           xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n          r = rm < 4\r\n           ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n           : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n            // Check whether the digit to the left of the rounding digit is odd.\r\n            ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n          if (sd < 1 || !xc[0]) {\r\n            xc.length = 0;\r\n\r\n            if (r) {\r\n\r\n              // Convert sd to decimal places.\r\n              sd -= x.e + 1;\r\n\r\n              // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n              xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n              x.e = -sd || 0;\r\n            } else {\r\n\r\n              // Zero.\r\n              xc[0] = x.e = 0;\r\n            }\r\n\r\n            return x;\r\n          }\r\n\r\n          // Remove excess digits.\r\n          if (i == 0) {\r\n            xc.length = ni;\r\n            k = 1;\r\n            ni--;\r\n          } else {\r\n            xc.length = ni + 1;\r\n            k = pows10[LOG_BASE - i];\r\n\r\n            // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n            // j > 0 means i > number of leading zeros of n.\r\n            xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n          }\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            for (; ;) {\r\n\r\n              // If the digit to be rounded up is in the first element of xc...\r\n              if (ni == 0) {\r\n\r\n                // i will be the length of xc[0] before k is added.\r\n                for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n                j = xc[0] += k;\r\n                for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n                // if i != k the length has increased.\r\n                if (i != k) {\r\n                  x.e++;\r\n                  if (xc[0] == BASE) xc[0] = 1;\r\n                }\r\n\r\n                break;\r\n              } else {\r\n                xc[ni] += k;\r\n                if (xc[ni] != BASE) break;\r\n                xc[ni--] = 0;\r\n                k = 1;\r\n              }\r\n            }\r\n          }\r\n\r\n          // Remove trailing zeros.\r\n          for (i = xc.length; xc[--i] === 0; xc.pop());\r\n        }\r\n\r\n        // Overflow? Infinity.\r\n        if (x.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n\r\n        // Underflow? Zero.\r\n        } else if (x.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        }\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n\r\n    function valueOf(n) {\r\n      var str,\r\n        e = n.e;\r\n\r\n      if (e === null) return n.toString();\r\n\r\n      str = coeffToString(n.c);\r\n\r\n      str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n        ? toExponential(str, e)\r\n        : toFixedPoint(str, e, '0');\r\n\r\n      return n.s < 0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n     */\r\n    P.absoluteValue = P.abs = function () {\r\n      var x = new BigNumber(this);\r\n      if (x.s < 0) x.s = 1;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return\r\n     *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     *   0 if they have the same value,\r\n     *   or null if the value of either is NaN.\r\n     */\r\n    P.comparedTo = function (y, b) {\r\n      return compare(this, new BigNumber(y, b));\r\n    };\r\n\r\n\r\n    /*\r\n     * If dp is undefined or null or true or false, return the number of decimal places of the\r\n     * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     *\r\n     * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.decimalPlaces = P.dp = function (dp, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), dp + x.e + 1, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n      // Subtract the number of trailing zeros of the last number.\r\n      if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n      if (n < 0) n = 0;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n / 0 = I\r\n     *  n / N = N\r\n     *  n / I = 0\r\n     *  0 / n = 0\r\n     *  0 / 0 = N\r\n     *  0 / N = N\r\n     *  0 / I = 0\r\n     *  N / n = N\r\n     *  N / 0 = N\r\n     *  N / N = N\r\n     *  N / I = N\r\n     *  I / n = I\r\n     *  I / 0 = I\r\n     *  I / N = N\r\n     *  I / I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n     * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.dividedBy = P.div = function (y, b) {\r\n      return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n     * BigNumber by the value of BigNumber(y, b).\r\n     */\r\n    P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n      return div(this, new BigNumber(y, b), 0, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n     *\r\n     * If m is present, return the result modulo m.\r\n     * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n     *\r\n     * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n     * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n     *\r\n     * n {number|string|BigNumber} The exponent. An integer.\r\n     * [m] {number|string|BigNumber} The modulus.\r\n     *\r\n     * '[BigNumber Error] Exponent not an integer: {n}'\r\n     */\r\n    P.exponentiatedBy = P.pow = function (n, m) {\r\n      var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n        x = this;\r\n\r\n      n = new BigNumber(n);\r\n\r\n      // Allow NaN and ±Infinity, but not other non-integers.\r\n      if (n.c && !n.isInteger()) {\r\n        throw Error\r\n          (bignumberError + 'Exponent not an integer: ' + valueOf(n));\r\n      }\r\n\r\n      if (m != null) m = new BigNumber(m);\r\n\r\n      // Exponent of MAX_SAFE_INTEGER is 15.\r\n      nIsBig = n.e > 14;\r\n\r\n      // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.\r\n      if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n        // The sign of the result of pow when x is negative depends on the evenness of n.\r\n        // If +n overflows to ±Infinity, the evenness of n would be not be known.\r\n        y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? 2 - isOdd(n) : +valueOf(n)));\r\n        return m ? y.mod(m) : y;\r\n      }\r\n\r\n      nIsNeg = n.s < 0;\r\n\r\n      if (m) {\r\n\r\n        // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n        if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n        isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n        if (isModExp) x = x.mod(m);\r\n\r\n      // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n      // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.\r\n      } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n        // [1, 240000000]\r\n        ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n        // [80000000000000]  [99999750000000]\r\n        : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n        // If x is negative and n is odd, k = -0, else k = 0.\r\n        k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n        // If x >= 1, k = ±Infinity.\r\n        if (x.e > -1) k = 1 / k;\r\n\r\n        // If n is negative return ±0, else return ±Infinity.\r\n        return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n      } else if (POW_PRECISION) {\r\n\r\n        // Truncating each coefficient array to a length of k after each multiplication\r\n        // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n        // i.e. there will be a minimum of 28 guard digits retained.\r\n        k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n      }\r\n\r\n      if (nIsBig) {\r\n        half = new BigNumber(0.5);\r\n        if (nIsNeg) n.s = 1;\r\n        nIsOdd = isOdd(n);\r\n      } else {\r\n        i = Math.abs(+valueOf(n));\r\n        nIsOdd = i % 2;\r\n      }\r\n\r\n      y = new BigNumber(ONE);\r\n\r\n      // Performs 54 loop iterations for n of 9007199254740991.\r\n      for (; ;) {\r\n\r\n        if (nIsOdd) {\r\n          y = y.times(x);\r\n          if (!y.c) break;\r\n\r\n          if (k) {\r\n            if (y.c.length > k) y.c.length = k;\r\n          } else if (isModExp) {\r\n            y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n          }\r\n        }\r\n\r\n        if (i) {\r\n          i = mathfloor(i / 2);\r\n          if (i === 0) break;\r\n          nIsOdd = i % 2;\r\n        } else {\r\n          n = n.times(half);\r\n          round(n, n.e + 1, 1);\r\n\r\n          if (n.e > 14) {\r\n            nIsOdd = isOdd(n);\r\n          } else {\r\n            i = +valueOf(n);\r\n            if (i === 0) break;\r\n            nIsOdd = i % 2;\r\n          }\r\n        }\r\n\r\n        x = x.times(x);\r\n\r\n        if (k) {\r\n          if (x.c && x.c.length > k) x.c.length = k;\r\n        } else if (isModExp) {\r\n          x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (isModExp) return y;\r\n      if (nIsNeg) y = ONE.div(y);\r\n\r\n      return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n     * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n     */\r\n    P.integerValue = function (rm) {\r\n      var n = new BigNumber(this);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n      return round(n, n.e + 1, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isEqualTo = P.eq = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n     */\r\n    P.isFinite = function () {\r\n      return !!this.c;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isGreaterThan = P.gt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n     */\r\n    P.isInteger = function () {\r\n      return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isLessThan = P.lt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n     */\r\n    P.isNaN = function () {\r\n      return !this.s;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is negative, otherwise return false.\r\n     */\r\n    P.isNegative = function () {\r\n      return this.s < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is positive, otherwise return false.\r\n     */\r\n    P.isPositive = function () {\r\n      return this.s > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n     */\r\n    P.isZero = function () {\r\n      return !!this.c && this.c[0] == 0;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n - 0 = n\r\n     *  n - N = N\r\n     *  n - I = -I\r\n     *  0 - n = -n\r\n     *  0 - 0 = 0\r\n     *  0 - N = N\r\n     *  0 - I = -I\r\n     *  N - n = N\r\n     *  N - 0 = N\r\n     *  N - N = N\r\n     *  N - I = N\r\n     *  I - n = I\r\n     *  I - 0 = I\r\n     *  I - N = N\r\n     *  I - I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.minus = function (y, b) {\r\n      var i, j, t, xLTy,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n      if (a != b) {\r\n        y.s = -b;\r\n        return x.plus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Either Infinity?\r\n        if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n        // Either zero?\r\n        if (!xc[0] || !yc[0]) {\r\n\r\n          // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n          return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n           // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n           ROUNDING_MODE == 3 ? -0 : 0);\r\n        }\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Determine which is the bigger number.\r\n      if (a = xe - ye) {\r\n\r\n        if (xLTy = a < 0) {\r\n          a = -a;\r\n          t = xc;\r\n        } else {\r\n          ye = xe;\r\n          t = yc;\r\n        }\r\n\r\n        t.reverse();\r\n\r\n        // Prepend zeros to equalise exponents.\r\n        for (b = a; b--; t.push(0));\r\n        t.reverse();\r\n      } else {\r\n\r\n        // Exponents equal. Check digit by digit.\r\n        j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n        for (a = b = 0; b < j; b++) {\r\n\r\n          if (xc[b] != yc[b]) {\r\n            xLTy = xc[b] < yc[b];\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      // x < y? Point xc to the array of the bigger number.\r\n      if (xLTy) t = xc, xc = yc, yc = t, y.s = -y.s;\r\n\r\n      b = (j = yc.length) - (i = xc.length);\r\n\r\n      // Append zeros to xc if shorter.\r\n      // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n      if (b > 0) for (; b--; xc[i++] = 0);\r\n      b = BASE - 1;\r\n\r\n      // Subtract yc from xc.\r\n      for (; j > a;) {\r\n\r\n        if (xc[--j] < yc[j]) {\r\n          for (i = j; i && !xc[--i]; xc[i] = b);\r\n          --xc[i];\r\n          xc[j] += BASE;\r\n        }\r\n\r\n        xc[j] -= yc[j];\r\n      }\r\n\r\n      // Remove leading zeros and adjust exponent accordingly.\r\n      for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n      // Zero?\r\n      if (!xc[0]) {\r\n\r\n        // Following IEEE 754 (2008) 6.3,\r\n        // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n        y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n        y.c = [y.e = 0];\r\n        return y;\r\n      }\r\n\r\n      // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n      // for finite x and y.\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     *   n % 0 =  N\r\n     *   n % N =  N\r\n     *   n % I =  n\r\n     *   0 % n =  0\r\n     *  -0 % n = -0\r\n     *   0 % 0 =  N\r\n     *   0 % N =  N\r\n     *   0 % I =  0\r\n     *   N % n =  N\r\n     *   N % 0 =  N\r\n     *   N % N =  N\r\n     *   N % I =  N\r\n     *   I % n =  N\r\n     *   I % 0 =  N\r\n     *   I % N =  N\r\n     *   I % I =  N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n     * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n     */\r\n    P.modulo = P.mod = function (y, b) {\r\n      var q, s,\r\n        x = this;\r\n\r\n      y = new BigNumber(y, b);\r\n\r\n      // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n      if (!x.c || !y.s || y.c && !y.c[0]) {\r\n        return new BigNumber(NaN);\r\n\r\n      // Return x if y is Infinity or x is zero.\r\n      } else if (!y.c || x.c && !x.c[0]) {\r\n        return new BigNumber(x);\r\n      }\r\n\r\n      if (MODULO_MODE == 9) {\r\n\r\n        // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n        // r = x - qy    where  0 <= r < abs(y)\r\n        s = y.s;\r\n        y.s = 1;\r\n        q = div(x, y, 0, 3);\r\n        y.s = s;\r\n        q.s *= s;\r\n      } else {\r\n        q = div(x, y, 0, MODULO_MODE);\r\n      }\r\n\r\n      y = x.minus(q.times(y));\r\n\r\n      // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n      if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n      return y;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n * 0 = 0\r\n     *  n * N = N\r\n     *  n * I = I\r\n     *  0 * n = 0\r\n     *  0 * 0 = 0\r\n     *  0 * N = N\r\n     *  0 * I = N\r\n     *  N * n = N\r\n     *  N * 0 = N\r\n     *  N * N = N\r\n     *  N * I = N\r\n     *  I * n = I\r\n     *  I * 0 = N\r\n     *  I * N = N\r\n     *  I * I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n     * of BigNumber(y, b).\r\n     */\r\n    P.multipliedBy = P.times = function (y, b) {\r\n      var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n        base, sqrtBase,\r\n        x = this,\r\n        xc = x.c,\r\n        yc = (y = new BigNumber(y, b)).c;\r\n\r\n      // Either NaN, ±Infinity or ±0?\r\n      if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n        // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n        if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n          y.c = y.e = y.s = null;\r\n        } else {\r\n          y.s *= x.s;\r\n\r\n          // Return ±Infinity if either is ±Infinity.\r\n          if (!xc || !yc) {\r\n            y.c = y.e = null;\r\n\r\n          // Return ±0 if either is ±0.\r\n          } else {\r\n            y.c = [0];\r\n            y.e = 0;\r\n          }\r\n        }\r\n\r\n        return y;\r\n      }\r\n\r\n      e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n      y.s *= x.s;\r\n      xcL = xc.length;\r\n      ycL = yc.length;\r\n\r\n      // Ensure xc points to longer array and xcL to its length.\r\n      if (xcL < ycL) zc = xc, xc = yc, yc = zc, i = xcL, xcL = ycL, ycL = i;\r\n\r\n      // Initialise the result array with zeros.\r\n      for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n      base = BASE;\r\n      sqrtBase = SQRT_BASE;\r\n\r\n      for (i = ycL; --i >= 0;) {\r\n        c = 0;\r\n        ylo = yc[i] % sqrtBase;\r\n        yhi = yc[i] / sqrtBase | 0;\r\n\r\n        for (k = xcL, j = i + k; j > i;) {\r\n          xlo = xc[--k] % sqrtBase;\r\n          xhi = xc[k] / sqrtBase | 0;\r\n          m = yhi * xlo + xhi * ylo;\r\n          xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n          c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n          zc[j--] = xlo % base;\r\n        }\r\n\r\n        zc[j] = c;\r\n      }\r\n\r\n      if (c) {\r\n        ++e;\r\n      } else {\r\n        zc.splice(0, 1);\r\n      }\r\n\r\n      return normalise(y, zc, e);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n     * i.e. multiplied by -1.\r\n     */\r\n    P.negated = function () {\r\n      var x = new BigNumber(this);\r\n      x.s = -x.s || null;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n + 0 = n\r\n     *  n + N = N\r\n     *  n + I = I\r\n     *  0 + n = n\r\n     *  0 + 0 = 0\r\n     *  0 + N = N\r\n     *  0 + I = I\r\n     *  N + n = N\r\n     *  N + 0 = N\r\n     *  N + N = N\r\n     *  N + I = N\r\n     *  I + n = I\r\n     *  I + 0 = I\r\n     *  I + N = N\r\n     *  I + I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.plus = function (y, b) {\r\n      var t,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n       if (a != b) {\r\n        y.s = -b;\r\n        return x.minus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Return ±Infinity if either ±Infinity.\r\n        if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n        // Either zero?\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n      if (a = xe - ye) {\r\n        if (a > 0) {\r\n          ye = xe;\r\n          t = yc;\r\n        } else {\r\n          a = -a;\r\n          t = xc;\r\n        }\r\n\r\n        t.reverse();\r\n        for (; a--; t.push(0));\r\n        t.reverse();\r\n      }\r\n\r\n      a = xc.length;\r\n      b = yc.length;\r\n\r\n      // Point xc to the longer array, and b to the shorter length.\r\n      if (a - b < 0) t = yc, yc = xc, xc = t, b = a;\r\n\r\n      // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n      for (a = 0; b;) {\r\n        a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n        xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n      }\r\n\r\n      if (a) {\r\n        xc = [a].concat(xc);\r\n        ++ye;\r\n      }\r\n\r\n      // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n      // ye = MAX_EXP + 1 possible\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     * If sd is undefined or null or true or false, return the number of significant digits of\r\n     * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     * If sd is true include integer-part trailing zeros in the count.\r\n     *\r\n     * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n     *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.precision = P.sd = function (sd, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (sd != null && sd !== !!sd) {\r\n        intCheck(sd, 1, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), sd, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      v = c.length - 1;\r\n      n = v * LOG_BASE + 1;\r\n\r\n      if (v = c[v]) {\r\n\r\n        // Subtract the number of trailing zeros of the last element.\r\n        for (; v % 10 == 0; v /= 10, n--);\r\n\r\n        // Add the number of digits of the first element.\r\n        for (v = c[0]; v >= 10; v /= 10, n++);\r\n      }\r\n\r\n      if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n     * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n     *\r\n     * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n     */\r\n    P.shiftedBy = function (k) {\r\n      intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n      return this.times('1e' + k);\r\n    };\r\n\r\n\r\n    /*\r\n     *  sqrt(-n) =  N\r\n     *  sqrt(N) =  N\r\n     *  sqrt(-I) =  N\r\n     *  sqrt(I) =  I\r\n     *  sqrt(0) =  0\r\n     *  sqrt(-0) = -0\r\n     *\r\n     * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n     * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.squareRoot = P.sqrt = function () {\r\n      var m, n, r, rep, t,\r\n        x = this,\r\n        c = x.c,\r\n        s = x.s,\r\n        e = x.e,\r\n        dp = DECIMAL_PLACES + 4,\r\n        half = new BigNumber('0.5');\r\n\r\n      // Negative/NaN/Infinity/zero?\r\n      if (s !== 1 || !c || !c[0]) {\r\n        return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n      }\r\n\r\n      // Initial estimate.\r\n      s = Math.sqrt(+valueOf(x));\r\n\r\n      // Math.sqrt underflow/overflow?\r\n      // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n      if (s == 0 || s == 1 / 0) {\r\n        n = coeffToString(c);\r\n        if ((n.length + e) % 2 == 0) n += '0';\r\n        s = Math.sqrt(+n);\r\n        e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n        if (s == 1 / 0) {\r\n          n = '5e' + e;\r\n        } else {\r\n          n = s.toExponential();\r\n          n = n.slice(0, n.indexOf('e') + 1) + e;\r\n        }\r\n\r\n        r = new BigNumber(n);\r\n      } else {\r\n        r = new BigNumber(s + '');\r\n      }\r\n\r\n      // Check for zero.\r\n      // r could be zero if MIN_EXP is changed after the this value was created.\r\n      // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n      // coeffToString to throw.\r\n      if (r.c[0]) {\r\n        e = r.e;\r\n        s = e + dp;\r\n        if (s < 3) s = 0;\r\n\r\n        // Newton-Raphson iteration.\r\n        for (; ;) {\r\n          t = r;\r\n          r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n          if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\r\n\r\n            // The exponent of r may here be one less than the final result exponent,\r\n            // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n            // are indexed correctly.\r\n            if (r.e < e) --s;\r\n            n = n.slice(s - 3, s + 1);\r\n\r\n            // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n            // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n            // iteration.\r\n            if (n == '9999' || !rep && n == '4999') {\r\n\r\n              // On the first iteration only, check to see if rounding up gives the\r\n              // exact result as the nines may infinitely repeat.\r\n              if (!rep) {\r\n                round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n                if (t.times(t).eq(x)) {\r\n                  r = t;\r\n                  break;\r\n                }\r\n              }\r\n\r\n              dp += 4;\r\n              s += 4;\r\n              rep = 1;\r\n            } else {\r\n\r\n              // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n              // result. If not, then there are further digits and m will be truthy.\r\n              if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n                // Truncate to the first rounding digit.\r\n                round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n                m = !r.times(r).eq(x);\r\n              }\r\n\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in exponential notation and\r\n     * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toExponential = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp++;\r\n      }\r\n      return format(this, dp, rm, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n     * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n     * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toFixed = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp = dp + this.e + 1;\r\n      }\r\n      return format(this, dp, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n     * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n     * of the format or FORMAT object (see BigNumber.set).\r\n     *\r\n     * The formatting object may contain some or all of the properties shown below.\r\n     *\r\n     * FORMAT = {\r\n     *   prefix: '',\r\n     *   groupSize: 3,\r\n     *   secondaryGroupSize: 0,\r\n     *   groupSeparator: ',',\r\n     *   decimalSeparator: '.',\r\n     *   fractionGroupSize: 0,\r\n     *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n     *   suffix: ''\r\n     * };\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     * [format] {object} Formatting options. See FORMAT pbject above.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     * '[BigNumber Error] Argument not an object: {format}'\r\n     */\r\n    P.toFormat = function (dp, rm, format) {\r\n      var str,\r\n        x = this;\r\n\r\n      if (format == null) {\r\n        if (dp != null && rm && typeof rm == 'object') {\r\n          format = rm;\r\n          rm = null;\r\n        } else if (dp && typeof dp == 'object') {\r\n          format = dp;\r\n          dp = rm = null;\r\n        } else {\r\n          format = FORMAT;\r\n        }\r\n      } else if (typeof format != 'object') {\r\n        throw Error\r\n          (bignumberError + 'Argument not an object: ' + format);\r\n      }\r\n\r\n      str = x.toFixed(dp, rm);\r\n\r\n      if (x.c) {\r\n        var i,\r\n          arr = str.split('.'),\r\n          g1 = +format.groupSize,\r\n          g2 = +format.secondaryGroupSize,\r\n          groupSeparator = format.groupSeparator || '',\r\n          intPart = arr[0],\r\n          fractionPart = arr[1],\r\n          isNeg = x.s < 0,\r\n          intDigits = isNeg ? intPart.slice(1) : intPart,\r\n          len = intDigits.length;\r\n\r\n        if (g2) i = g1, g1 = g2, g2 = i, len -= i;\r\n\r\n        if (g1 > 0 && len > 0) {\r\n          i = len % g1 || g1;\r\n          intPart = intDigits.substr(0, i);\r\n          for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\r\n          if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n          if (isNeg) intPart = '-' + intPart;\r\n        }\r\n\r\n        str = fractionPart\r\n         ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)\r\n          ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n           '$&' + (format.fractionGroupSeparator || ''))\r\n          : fractionPart)\r\n         : intPart;\r\n      }\r\n\r\n      return (format.prefix || '') + str + (format.suffix || '');\r\n    };\r\n\r\n\r\n    /*\r\n     * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n     * fraction with an integer numerator and an integer denominator.\r\n     * The denominator will be a positive non-zero value less than or equal to the specified\r\n     * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n     * the lowest value necessary to represent the number exactly.\r\n     *\r\n     * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n     *\r\n     * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n     */\r\n    P.toFraction = function (md) {\r\n      var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,\r\n        x = this,\r\n        xc = x.c;\r\n\r\n      if (md != null) {\r\n        n = new BigNumber(md);\r\n\r\n        // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n        if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n          throw Error\r\n            (bignumberError + 'Argument ' +\r\n              (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\r\n        }\r\n      }\r\n\r\n      if (!xc) return new BigNumber(x);\r\n\r\n      d = new BigNumber(ONE);\r\n      n1 = d0 = new BigNumber(ONE);\r\n      d1 = n0 = new BigNumber(ONE);\r\n      s = coeffToString(xc);\r\n\r\n      // Determine initial denominator.\r\n      // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n      e = d.e = s.length - x.e - 1;\r\n      d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n      md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n      exp = MAX_EXP;\r\n      MAX_EXP = 1 / 0;\r\n      n = new BigNumber(s);\r\n\r\n      // n0 = d1 = 0\r\n      n0.c[0] = 0;\r\n\r\n      for (; ;)  {\r\n        q = div(n, d, 0, 1);\r\n        d2 = d0.plus(q.times(d1));\r\n        if (d2.comparedTo(md) == 1) break;\r\n        d0 = d1;\r\n        d1 = d2;\r\n        n1 = n0.plus(q.times(d2 = n1));\r\n        n0 = d2;\r\n        d = n.minus(q.times(d2 = d));\r\n        n = d2;\r\n      }\r\n\r\n      d2 = div(md.minus(d0), d1, 0, 1);\r\n      n0 = n0.plus(d2.times(n1));\r\n      d0 = d0.plus(d2.times(d1));\r\n      n0.s = n1.s = x.s;\r\n      e = e * 2;\r\n\r\n      // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n      r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n          div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\r\n\r\n      MAX_EXP = exp;\r\n\r\n      return r;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return the value of this BigNumber converted to a number primitive.\r\n     */\r\n    P.toNumber = function () {\r\n      return +valueOf(this);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n     * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n     * necessary to represent the integer part of the value in fixed-point notation, then use\r\n     * exponential notation.\r\n     *\r\n     * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.toPrecision = function (sd, rm) {\r\n      if (sd != null) intCheck(sd, 1, MAX);\r\n      return format(this, sd, rm, 2);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n     * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n     * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n     * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n     * TO_EXP_NEG, return exponential notation.\r\n     *\r\n     * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n     *\r\n     * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n     */\r\n    P.toString = function (b) {\r\n      var str,\r\n        n = this,\r\n        s = n.s,\r\n        e = n.e;\r\n\r\n      // Infinity or NaN?\r\n      if (e === null) {\r\n        if (s) {\r\n          str = 'Infinity';\r\n          if (s < 0) str = '-' + str;\r\n        } else {\r\n          str = 'NaN';\r\n        }\r\n      } else {\r\n        if (b == null) {\r\n          str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n           ? toExponential(coeffToString(n.c), e)\r\n           : toFixedPoint(coeffToString(n.c), e, '0');\r\n        } else if (b === 10 && alphabetHasNormalDecimalDigits) {\r\n          n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\r\n          str = toFixedPoint(coeffToString(n.c), n.e, '0');\r\n        } else {\r\n          intCheck(b, 2, ALPHABET.length, 'Base');\r\n          str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\r\n        }\r\n\r\n        if (s < 0 && n.c[0]) str = '-' + str;\r\n      }\r\n\r\n      return str;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return as toString, but do not accept a base argument, and include the minus sign for\r\n     * negative zero.\r\n     */\r\n    P.valueOf = P.toJSON = function () {\r\n      return valueOf(this);\r\n    };\r\n\r\n\r\n    P._isBigNumber = true;\r\n\r\n    if (configObject != null) BigNumber.set(configObject);\r\n\r\n    return BigNumber;\r\n  }\r\n\r\n\r\n  // PRIVATE HELPER FUNCTIONS\r\n\r\n  // These functions don't need access to variables,\r\n  // e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\r\n\r\n\r\n  function bitFloor(n) {\r\n    var i = n | 0;\r\n    return n > 0 || n === i ? i : i - 1;\r\n  }\r\n\r\n\r\n  // Return a coefficient array as a string of base 10 digits.\r\n  function coeffToString(a) {\r\n    var s, z,\r\n      i = 1,\r\n      j = a.length,\r\n      r = a[0] + '';\r\n\r\n    for (; i < j;) {\r\n      s = a[i++] + '';\r\n      z = LOG_BASE - s.length;\r\n      for (; z--; s = '0' + s);\r\n      r += s;\r\n    }\r\n\r\n    // Determine trailing zeros.\r\n    for (j = r.length; r.charCodeAt(--j) === 48;);\r\n\r\n    return r.slice(0, j + 1 || 1);\r\n  }\r\n\r\n\r\n  // Compare the value of BigNumbers x and y.\r\n  function compare(x, y) {\r\n    var a, b,\r\n      xc = x.c,\r\n      yc = y.c,\r\n      i = x.s,\r\n      j = y.s,\r\n      k = x.e,\r\n      l = y.e;\r\n\r\n    // Either NaN?\r\n    if (!i || !j) return null;\r\n\r\n    a = xc && !xc[0];\r\n    b = yc && !yc[0];\r\n\r\n    // Either zero?\r\n    if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n    // Signs differ?\r\n    if (i != j) return i;\r\n\r\n    a = i < 0;\r\n    b = k == l;\r\n\r\n    // Either Infinity?\r\n    if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n    // Compare exponents.\r\n    if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n    j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n    // Compare lengths.\r\n    return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n  }\r\n\r\n\r\n  /*\r\n   * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n   */\r\n  function intCheck(n, min, max, name) {\r\n    if (n < min || n > max || n !== mathfloor(n)) {\r\n      throw Error\r\n       (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n         ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n         : ' not a primitive number: ') + String(n));\r\n    }\r\n  }\r\n\r\n\r\n  // Assumes finite n.\r\n  function isOdd(n) {\r\n    var k = n.c.length - 1;\r\n    return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n  }\r\n\r\n\r\n  function toExponential(str, e) {\r\n    return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n     (e < 0 ? 'e' : 'e+') + e;\r\n  }\r\n\r\n\r\n  function toFixedPoint(str, e, z) {\r\n    var len, zs;\r\n\r\n    // Negative exponent?\r\n    if (e < 0) {\r\n\r\n      // Prepend zeros.\r\n      for (zs = z + '.'; ++e; zs += z);\r\n      str = zs + str;\r\n\r\n    // Positive exponent\r\n    } else {\r\n      len = str.length;\r\n\r\n      // Append zeros.\r\n      if (++e > len) {\r\n        for (zs = z, e -= len; --e; zs += z);\r\n        str += zs;\r\n      } else if (e < len) {\r\n        str = str.slice(0, e) + '.' + str.slice(e);\r\n      }\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n\r\n  // EXPORT\r\n\r\n\r\n  BigNumber = clone();\r\n  BigNumber['default'] = BigNumber.BigNumber = BigNumber;\r\n\r\n  // AMD.\r\n  if (typeof define == 'function' && define.amd) {\r\n    define(function () { return BigNumber; });\r\n\r\n  // Node.js and other environments that support module.exports.\r\n  } else if (typeof module != 'undefined' && module.exports) {\r\n    module.exports = BigNumber;\r\n\r\n  // Browser.\r\n  } else {\r\n    if (!globalObject) {\r\n      globalObject = typeof self != 'undefined' && self ? self : window;\r\n    }\r\n\r\n    globalObject.BigNumber = BigNumber;\r\n  }\r\n})(this);\r\n","module.exports = IdIterator\n\nfunction IdIterator(opts){\n  opts = opts || {}\n  var max = opts.max || Number.MAX_SAFE_INTEGER\n  var idCounter = typeof opts.start !== 'undefined' ? opts.start : Math.floor(Math.random() * max)\n\n  return function createRandomId () {\n    idCounter = idCounter % max\n    return idCounter++\n  }\n\n}","/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.21';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function',\n      INVALID_TEMPL_VAR_ERROR_TEXT = 'Invalid `variable` option passed into `_.template`';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading whitespace. */\n  var reTrimStart = /^\\s+/;\n\n  /** Used to match a single whitespace character. */\n  var reWhitespace = /\\s/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /**\n   * Used to validate the `validate` option in `_.template` variable.\n   *\n   * Forbids characters which could potentially change the meaning of the function argument definition:\n   * - \"(),\" (modification of function parameters)\n   * - \"=\" (default value)\n   * - \"[]{}\" (destructuring of function parameters)\n   * - \"/\" (beginning of a comment)\n   * - whitespace\n   */\n  var reForbiddenIdentifierChars = /[()=,{}\\[\\]\\/\\s]/;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n      rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      // Use `util.types` for Node.js 10+.\n      var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n      if (types) {\n        return types;\n      }\n\n      // Legacy `process.binding('util')` for Node.js < 10.\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.trim`.\n   *\n   * @private\n   * @param {string} string The string to trim.\n   * @returns {string} Returns the trimmed string.\n   */\n  function baseTrim(string) {\n    return string\n      ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n      : string;\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the last non-whitespace character.\n   */\n  function trimmedEndIndex(string) {\n    var index = string.length;\n\n    while (index-- && reWhitespace.test(string.charAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      if (isSet(value)) {\n        value.forEach(function(subValue) {\n          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n        });\n      } else if (isMap(value)) {\n        value.forEach(function(subValue, key) {\n          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n        });\n      }\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        stack || (stack = new Stack);\n        if (isObject(srcValue)) {\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = safeGet(object, key),\n          srcValue = safeGet(source, key),\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || isFunction(objValue)) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      if (iteratees.length) {\n        iteratees = arrayMap(iteratees, function(iteratee) {\n          if (isArray(iteratee)) {\n            return function(value) {\n              return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n            }\n          }\n          return iteratee;\n        });\n      } else {\n        iteratees = [identity];\n      }\n\n      var index = -1;\n      iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n          return object;\n        }\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      var low = 0,\n          high = array == null ? 0 : array.length;\n      if (high === 0) {\n        return 0;\n      }\n\n      value = iteratee(value);\n      var valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision && nativeIsFinite(number)) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Check that cyclic values are equal.\n      var arrStacked = stack.get(array);\n      var othStacked = stack.get(other);\n      if (arrStacked && othStacked) {\n        return arrStacked == other && othStacked == array;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Check that cyclic values are equal.\n      var objStacked = stack.get(object);\n      var othStacked = stack.get(other);\n      if (objStacked && othStacked) {\n        return objStacked == other && othStacked == object;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return new Ctor;\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return new Ctor;\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      var type = typeof value;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n\n      return !!length &&\n        (type == 'number' ||\n          (type != 'symbol' && reIsUint.test(value))) &&\n            (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the property to get.\n     * @returns {*} Returns the property value.\n     */\n    function safeGet(object, key) {\n      if (key === 'constructor' && typeof object[key] === 'function') {\n        return;\n      }\n\n      if (key == '__proto__') {\n        return;\n      }\n\n      return object[key];\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (string.charCodeAt(0) === 46 /* . */) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, subString) {\n        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     *\n     * // Combining several predicates using `_.overEvery` or `_.overSome`.\n     * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n     * // => objects for ['fred', 'barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 30 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            timeWaiting = wait - timeSinceLastCall;\n\n        return maxing\n          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n          : timeWaiting;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            clearTimeout(timerId);\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = baseTrim(value);\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(object, sources) {\n      object = Object(object);\n\n      var index = -1;\n      var length = sources.length;\n      var guard = length > 2 ? sources[2] : undefined;\n\n      if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n        length = 1;\n      }\n\n      while (++index < length) {\n        var source = sources[index];\n        var props = keysIn(source);\n        var propsIndex = -1;\n        var propsLength = props.length;\n\n        while (++propsIndex < propsLength) {\n          var key = props[propsIndex];\n          var value = object[key];\n\n          if (value === undefined ||\n              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n            object[key] = source[key];\n          }\n        }\n      }\n\n      return object;\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      // The sourceURL gets injected into the source that's eval-ed, so be careful\n      // to normalize all kinds of whitespace, so e.g. newlines (and unicode versions of it) can't sneak in\n      // and escape the comment, thus injecting code that gets evaled.\n      var sourceURL = '//# sourceURL=' +\n        (hasOwnProperty.call(options, 'sourceURL')\n          ? (options.sourceURL + '').replace(/\\s/g, ' ')\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = hasOwnProperty.call(options, 'variable') && options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Throw an error if a forbidden character was found in `variable`, to prevent\n      // potential command injection attacks.\n      else if (reForbiddenIdentifierChars.test(variable)) {\n        throw new Error(INVALID_TEMPL_VAR_ERROR_TEXT);\n      }\n\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return baseTrim(string);\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.slice(0, trimmedEndIndex(string) + 1);\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * **Note:** Multiple values can be checked by combining several matchers\n     * using `_.overSome`\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     *\n     * // Checking for several possible values\n     * _.filter(objects, _.overSome([_.matches({ 'a': 1 }), _.matches({ 'a': 4 })]));\n     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * **Note:** Multiple values can be checked by combining several matchers\n     * using `_.overSome`\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     *\n     * // Checking for several possible values\n     * _.filter(objects, _.overSome([_.matchesProperty('a', 1), _.matchesProperty('a', 4)]));\n     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * Following shorthands are possible for providing predicates.\n     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.\n     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * Following shorthands are possible for providing predicates.\n     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.\n     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     *\n     * var matchesFunc = _.overSome([{ 'a': 1 }, { 'a': 2 }])\n     * var matchesPropertyFunc = _.overSome([['a', 1], ['a', 2]])\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = lodashFunc.name + '';\n        if (!hasOwnProperty.call(realNames, key)) {\n          realNames[key] = [];\n        }\n        realNames[key].push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n"],"names":["BaseController","constructor","_ref","config","state","_defineProperty","defaultConfig","defaultState","initialState","initialConfig","this","internalConfig","internalState","configure","overwrite","fullUpdate","key","Object","assign","update","emit","initialize","SafeEventEmitter","filterNoop","internalEvents","externalEventFilter","name","includes","createEventEmitterProxy","initialTarget","opts","eventFilter","Error","target","setTarget","newTarget","oldTarget","eventNames","filter","forEach","eventEmitter","rawListeners","getRawListeners","handler","on","removeAllListeners","Proxy","get","_","set","value","createRandomId","getCreateRandomId","providerFromEngine","engine","provider","sendAsync","req","handle","res","error","err","serializeError","fallbackError","message","toString","code","ethErrors","result","send","callback","request","args","_objectSpread$2","id","jsonrpc","COMMUNICATION_NOTIFICATIONS","IFRAME_STATUS","CREATE_WINDOW","CLOSE_WINDOW","USER_LOGGED_IN","USER_LOGGED_OUT","COMMUNICATION_JRPC_METHODS","LOGOUT","WALLET_INSTANCE_ID","USER_INFO","SET_PROVIDER","TOPUP","OPENED_WINDOW","CLOSED_WINDOW","GET_PROVIDER_STATE","LOGIN_WITH_PRIVATE_KEY","PROVIDER_JRPC_METHODS","PROVIDER_NOTIFICATIONS","ACCOUNTS_CHANGED","CHAIN_CHANGED","UNLOCK_STATE_CHANGED","padWithZeroes","hexString","targetLength","test","String","prototype","padStart","call","getHeaders","signMessage","privateKey","data","privKey","Buffer","from","stripHexPrefix","msgSig","ecsign","v","r","s","rSig","fromSigned","sSig","vSig","bufferToInt","rStr","toUnsigned","sStr","vStr","i","hex","intToHex","addHexPrefix","concat","concatSig","intToBuffer","RETRIABLE_ERRORS","checkForHttpErrors","fetchRes","status","timeout","duration","Promise","resolve","setTimeout","parseResponse","body","createFetchConfigFromReq","rpcTarget","originHttpHeaderKey","parsedUrl","URL","payload","method","params","originDomain","origin","fetchParams","headers","Accept","JSON","stringify","fetchUrl","href","createFetchMiddleware","_ref2","createAsyncMiddleware","_next","maxAttempts","retryInterval","attempt","fetch","json","fetchBody","errMsg","some","phrase","createLoggerMiddleware","options","response","next","log","isTorusInternal","TransactionStatus","BaseProvider","chainConfig","WalletInitializationError","chainId","networks","_providerEngineProxy","addChain","_objectSpread","getChainConfig","_this$config$networks","getProviderEngineProxy","updateProviderEngineProxy","providerEngineProxy","CommonPrivateKeyProvider","privKeyMiddleware","getPrivKeyMiddleware","JRPCEngine","push","middleware","getPrivatekey","createPrivKeyMiddleware","createScaffoldMiddleware","private_key","providerFactory","setupProvider","globalObject","BigNumber","isNumeric","mathceil","Math","ceil","mathfloor","floor","bignumberError","tooManyDigits","BASE","LOG_BASE","MAX_SAFE_INTEGER","POWS_TEN","SQRT_BASE","MAX","bitFloor","n","coeffToString","a","z","j","length","charCodeAt","slice","compare","x","y","b","xc","c","yc","k","e","l","intCheck","min","max","isOdd","toExponential","str","charAt","toFixedPoint","len","zs","clone","configObject","div","convertBase","parseNumeric","P","valueOf","ONE","DECIMAL_PLACES","ROUNDING_MODE","TO_EXP_NEG","TO_EXP_POS","MIN_EXP","MAX_EXP","CRYPTO","MODULO_MODE","POW_PRECISION","FORMAT","prefix","groupSize","secondaryGroupSize","groupSeparator","decimalSeparator","fractionGroupSize","fractionGroupSeparator","suffix","ALPHABET","alphabetHasNormalDecimalDigits","alphabet","caseChanged","isNum","_isBigNumber","indexOf","replace","search","substring","round","DEBUG","toUpperCase","toLowerCase","format","rm","c0","ne","maxOrMin","m","normalise","pop","sd","d","ni","rd","pows10","out","ROUND_UP","ROUND_DOWN","ROUND_CEIL","ROUND_FLOOR","ROUND_HALF_UP","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","EUCLID","obj","p","hasOwnProperty","crypto","getRandomValues","randomBytes","EXPONENTIAL_AT","RANGE","isBigNumber","maximum","arguments","lt","minimum","gt","random","pow2_53","random53bitInt","dp","rand","Uint32Array","copy","splice","sum","plus","decimal","toBaseOut","baseIn","baseOut","arrL","arr","reverse","sign","callerIsToString","pow","multiply","base","temp","xlo","xhi","carry","klo","khi","aL","bL","cmp","subtract","more","prod","prodL","q","qc","rem","remL","rem0","xi","xL","yc0","yL","yz","NaN","basePrefix","dotAfter","dotBefore","isInfinityOrNaN","whitespaceOrPlus","isNaN","p1","p2","absoluteValue","abs","comparedTo","decimalPlaces","dividedBy","dividedToIntegerBy","idiv","exponentiatedBy","half","isModExp","nIsBig","nIsNeg","nIsOdd","isInteger","mod","times","integerValue","isEqualTo","eq","isFinite","isGreaterThan","isGreaterThanOrEqualTo","gte","isLessThan","isLessThanOrEqualTo","lte","isNegative","isPositive","isZero","minus","t","xLTy","xe","ye","modulo","multipliedBy","xcL","ycL","ylo","yhi","zc","sqrtBase","negated","precision","shiftedBy","squareRoot","sqrt","rep","toFixed","toFormat","split","g1","g2","intPart","fractionPart","isNeg","intDigits","substr","RegExp","toFraction","md","d0","d1","d2","exp","n0","n1","toNumber","toPrecision","toJSON","define","module","exports","Number","idCounter","start","undefined","FUNC_ERROR_TEXT","HASH_UNDEFINED","PLACEHOLDER","WRAP_CURRY_RIGHT_FLAG","WRAP_PARTIAL_FLAG","WRAP_PARTIAL_RIGHT_FLAG","WRAP_ARY_FLAG","WRAP_REARG_FLAG","INFINITY","NAN","MAX_ARRAY_LENGTH","wrapFlags","argsTag","arrayTag","boolTag","dateTag","errorTag","funcTag","genTag","mapTag","numberTag","objectTag","promiseTag","regexpTag","setTag","stringTag","symbolTag","weakMapTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","reEscapedHtml","reUnescapedHtml","reHasEscapedHtml","source","reHasUnescapedHtml","reEscape","reEvaluate","reInterpolate","reIsDeepProp","reIsPlainProp","rePropName","reRegExpChar","reHasRegExpChar","reTrimStart","reWhitespace","reWrapComment","reWrapDetails","reSplitDetails","reAsciiWord","reForbiddenIdentifierChars","reEscapeChar","reEsTemplate","reFlags","reIsBadHex","reIsBinary","reIsHostCtor","reIsOctal","reIsUint","reLatin","reNoMatch","reUnescapedString","rsComboRange","rsComboMarksRange","rsDingbatRange","rsLowerRange","rsUpperRange","rsVarRange","rsBreakRange","rsMathOpRange","rsApos","rsAstral","rsBreak","rsCombo","rsDigits","rsDingbat","rsLower","rsMisc","rsFitz","rsNonAstral","rsRegional","rsSurrPair","rsUpper","rsMiscLower","rsMiscUpper","rsOptContrLower","rsOptContrUpper","reOptMod","rsOptVar","rsSeq","join","rsEmoji","rsSymbol","reApos","reComboMark","reUnicode","reUnicodeWord","reHasUnicode","reHasUnicodeWord","contextProps","templateCounter","typedArrayTags","cloneableTags","stringEscapes","freeParseFloat","parseFloat","freeParseInt","parseInt","freeGlobal","global","freeSelf","self","root","Function","freeExports","nodeType","freeModule","moduleExports","freeProcess","process","nodeUtil","types","require","binding","nodeIsArrayBuffer","isArrayBuffer","nodeIsDate","isDate","nodeIsMap","isMap","nodeIsRegExp","isRegExp","nodeIsSet","isSet","nodeIsTypedArray","isTypedArray","apply","func","thisArg","arrayAggregator","array","setter","iteratee","accumulator","index","arrayEach","arrayEachRight","arrayEvery","predicate","arrayFilter","resIndex","arrayIncludes","baseIndexOf","arrayIncludesWith","comparator","arrayMap","Array","arrayPush","values","offset","arrayReduce","initAccum","arrayReduceRight","arraySome","asciiSize","baseProperty","baseFindKey","collection","eachFunc","baseFindIndex","fromIndex","fromRight","strictIndexOf","baseIsNaN","baseIndexOfWith","baseMean","baseSum","object","basePropertyOf","baseReduce","current","baseTimes","baseTrim","string","trimmedEndIndex","baseUnary","baseValues","props","cacheHas","cache","has","charsStartIndex","strSymbols","chrSymbols","charsEndIndex","countHolders","placeholder","deburrLetter","escapeHtmlChar","escapeStringChar","chr","hasUnicode","mapToArray","map","size","overArg","transform","arg","replaceHolders","setToArray","setToPairs","stringSize","lastIndex","unicodeSize","stringToArray","match","unicodeToArray","asciiToArray","unescapeHtmlChar","runInContext","context","defaults","pick","Date","TypeError","arrayProto","funcProto","objectProto","coreJsData","funcToString","maskSrcKey","uid","exec","keys","IE_PROTO","nativeObjectToString","objectCtorString","oldDash","reIsNative","Symbol","Uint8Array","allocUnsafe","getPrototype","getPrototypeOf","objectCreate","create","propertyIsEnumerable","spreadableSymbol","isConcatSpreadable","symIterator","iterator","symToStringTag","toStringTag","defineProperty","getNative","ctxClearTimeout","clearTimeout","ctxNow","now","ctxSetTimeout","nativeCeil","nativeFloor","nativeGetSymbols","getOwnPropertySymbols","nativeIsBuffer","isBuffer","nativeIsFinite","nativeJoin","nativeKeys","nativeMax","nativeMin","nativeNow","nativeParseInt","nativeRandom","nativeReverse","DataView","Map","Set","WeakMap","nativeCreate","metaMap","realNames","dataViewCtorString","toSource","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","symbolValueOf","symbolToString","lodash","isObjectLike","isArray","LazyWrapper","LodashWrapper","wrapperClone","baseCreate","proto","isObject","baseLodash","chainAll","__wrapped__","__actions__","__chain__","__index__","__values__","__dir__","__filtered__","__iteratees__","__takeCount__","__views__","Hash","entries","clear","entry","ListCache","MapCache","SetCache","__data__","add","Stack","arrayLikeKeys","inherited","isArr","isArg","isArguments","isBuff","isType","skipIndexes","isIndex","arraySample","baseRandom","arraySampleSize","shuffleSelf","copyArray","baseClamp","arrayShuffle","assignMergeValue","baseAssignValue","assignValue","objValue","assocIndexOf","baseAggregator","baseEach","baseAssign","copyObject","baseAt","paths","skip","number","lower","upper","baseClone","bitmask","customizer","stack","isDeep","isFlat","isFull","input","initCloneArray","tag","getTag","isFunc","cloneBuffer","initCloneObject","getSymbolsIn","copySymbolsIn","keysIn","baseAssignIn","getSymbols","copySymbols","Ctor","cloneArrayBuffer","dataView","buffer","byteOffset","byteLength","cloneDataView","cloneTypedArray","regexp","cloneRegExp","symbol","initCloneByTag","stacked","subValue","getAllKeysIn","getAllKeys","baseConformsTo","baseDelay","wait","baseDifference","isCommon","valuesLength","outer","computed","valuesIndex","templateSettings","getMapData","pairs","LARGE_ARRAY_SIZE","createBaseEach","baseForOwn","baseEachRight","baseForOwnRight","baseEvery","baseExtremum","isSymbol","baseFilter","baseFlatten","depth","isStrict","isFlattenable","baseFor","createBaseFor","baseForRight","baseFunctions","isFunction","baseGet","path","castPath","toKey","baseGetAllKeys","keysFunc","symbolsFunc","baseGetTag","isOwn","unmasked","getRawTag","objectToString","baseGt","other","baseHas","baseHasIn","baseIntersection","arrays","othLength","othIndex","caches","maxLength","Infinity","seen","baseInvoke","parent","last","baseIsArguments","baseIsEqual","equalFunc","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","equalArrays","convert","isPartial","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","objProps","objLength","objStacked","othStacked","skipCtor","othValue","compared","objCtor","othCtor","equalObjects","baseIsEqualDeep","baseIsMatch","matchData","noCustomizer","srcValue","COMPARE_PARTIAL_FLAG","baseIsNative","baseIteratee","identity","baseMatchesProperty","baseMatches","property","baseKeys","isPrototype","baseKeysIn","nativeKeysIn","isProto","baseLt","baseMap","isArrayLike","getMatchData","matchesStrictComparable","isKey","isStrictComparable","hasIn","baseMerge","srcIndex","mergeFunc","safeGet","newValue","isTyped","isArrayLikeObject","isPlainObject","toPlainObject","baseMergeDeep","baseNth","baseOrderBy","iteratees","orders","getIteratee","criteria","comparer","sort","baseSortBy","objCriteria","othCriteria","ordersLength","compareAscending","compareMultiple","basePickBy","baseSet","basePullAll","basePullAt","indexes","previous","baseUnset","baseRepeat","baseRest","setToString","overRest","baseSample","baseSampleSize","nested","baseSetData","baseSetToString","constant","baseShuffle","baseSlice","end","baseSome","baseSortedIndex","retHighest","low","high","mid","baseSortedIndexBy","valIsNaN","valIsNull","valIsSymbol","valIsUndefined","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","setLow","baseSortedUniq","baseToNumber","baseToString","baseUniq","createSet","seenIndex","baseUpdate","updater","baseWhile","isDrop","baseWrapperValue","actions","action","baseXor","baseZipObject","assignFunc","valsLength","castArrayLikeObject","castFunction","stringToPath","castRest","castSlice","arrayBuffer","typedArray","valIsDefined","valIsReflexive","composeArgs","partials","holders","isCurried","argsIndex","argsLength","holdersLength","leftIndex","leftLength","rangeLength","isUncurried","composeArgsRight","holdersIndex","rightIndex","rightLength","isNew","createAggregator","initializer","createAssigner","assigner","sources","guard","isIterateeCall","iterable","createCaseFirst","methodName","trailing","createCompounder","words","deburr","createCtor","thisBinding","createFind","findIndexFunc","createFlow","flatRest","funcs","prereq","thru","wrapper","getFuncName","funcName","getData","isLaziable","plant","createHybrid","partialsRight","holdersRight","argPos","ary","arity","isAry","isBind","isBindKey","isFlip","getHolder","holdersCount","newHolders","createRecurry","fn","reorder","createInverter","toIteratee","baseInverter","createMathOperation","operator","defaultValue","createOver","arrayFunc","createPadding","chars","charsLength","createRange","step","toFinite","baseRange","createRelationalOperation","wrapFunc","isCurry","newData","setData","setWrapToString","createRound","toInteger","pair","noop","createToPairs","baseToPairs","createWrap","srcBitmask","newBitmask","isCombo","mergeData","createCurry","createPartial","createBind","customDefaultsAssignIn","customDefaultsMerge","customOmitClone","arrLength","arrStacked","arrValue","flatten","otherFunc","type","isKeyable","getValue","stubArray","hasPath","hasFunc","isLength","ArrayBuffer","ctorString","isMaskable","stubFalse","otherArgs","oldArray","shortOut","reference","details","insertWrapDetails","updateWrapDetails","getWrapDetails","count","lastCalled","stamp","remaining","memoize","memoizeCapped","quote","subString","difference","differenceBy","differenceWith","findIndex","findLastIndex","head","intersection","mapped","intersectionBy","intersectionWith","pull","pullAll","pullAt","union","unionBy","unionWith","unzip","group","unzipWith","without","xor","xorBy","xorWith","zip","zipWith","chain","interceptor","wrapperAt","countBy","find","findLast","forEachRight","groupBy","invokeMap","keyBy","partition","sortBy","before","bind","bindKey","WRAP_BIND_FLAG","debounce","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","invokeFunc","time","leadingEdge","timerExpired","shouldInvoke","timeSinceLastCall","trailingEdge","timeWaiting","remainingWait","debounced","isInvoking","cancel","flush","defer","delay","resolver","memoized","Cache","negate","overArgs","transforms","funcsLength","partial","partialRight","rearg","isError","isNumber","isString","toArray","done","iteratorToArray","remainder","toLength","isBinary","assignIn","assignInWith","assignWith","at","propsIndex","propsLength","defaultsDeep","mergeWith","invert","invertBy","invoke","merge","omit","CLONE_DEEP_FLAG","basePick","pickBy","prop","toPairs","toPairsIn","camelCase","word","capitalize","upperFirst","kebabCase","lowerCase","lowerFirst","snakeCase","startCase","upperCase","pattern","hasUnicodeWord","unicodeWords","asciiWords","bindAll","methodNames","flow","flowRight","methodOf","mixin","over","overEvery","overSome","basePropertyDeep","range","rangeRight","augend","addend","divide","dividend","divisor","multiplier","multiplicand","minuend","subtrahend","after","castArray","chunk","compact","cond","conforms","baseConforms","properties","curry","curryRight","drop","dropRight","dropRightWhile","dropWhile","fill","baseFill","flatMap","flatMapDeep","flatMapDepth","flattenDeep","flattenDepth","flip","fromPairs","functions","functionsIn","initial","mapKeys","mapValues","matches","matchesProperty","nthArg","omitBy","once","orderBy","propertyOf","pullAllBy","pullAllWith","reject","remove","rest","sampleSize","setWith","shuffle","sortedUniq","sortedUniqBy","separator","limit","spread","tail","take","takeRight","takeRightWhile","takeWhile","tap","throttle","toPath","isArrLike","unary","uniq","uniqBy","uniqWith","unset","updateWith","valuesIn","wrap","zipObject","zipObjectDeep","entriesIn","extend","extendWith","clamp","cloneDeep","cloneDeepWith","cloneWith","conformsTo","defaultTo","endsWith","position","escape","escapeRegExp","every","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","inRange","baseInRange","isBoolean","isElement","isEmpty","isEqual","isEqualWith","isMatch","isMatchWith","isNative","isNil","isNull","isSafeInteger","isUndefined","isWeakMap","isWeakSet","lastIndexOf","strictLastIndexOf","maxBy","mean","meanBy","minBy","stubObject","stubString","stubTrue","nth","noConflict","pad","strLength","padEnd","radix","floating","reduce","reduceRight","repeat","sample","sortedIndex","sortedIndexBy","sortedIndexOf","sortedLastIndex","sortedLastIndexBy","sortedLastIndexOf","startsWith","sumBy","template","settings","isEscaping","isEvaluating","imports","importsKeys","importsValues","interpolate","reDelimiters","evaluate","sourceURL","escapeValue","interpolateValue","esTemplateValue","evaluateValue","variable","toLower","toSafeInteger","toUpper","trim","trimEnd","trimStart","truncate","omission","newEnd","unescape","uniqueId","each","eachRight","first","VERSION","isFilter","takeName","dropName","checkIteratee","isTaker","lodashFunc","retUnwrapped","isLazy","useLazy","isHybrid","isUnwrapped","onlyLazy","chainName","dir","isRight","view","getView","iterLength","takeCount","iterIndex","commit","wrapped"],"sourceRoot":""}